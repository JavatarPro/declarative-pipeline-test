{
    "apiVersion": "v1",
    "items": [
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/revision": "6",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{\"deployment.kubernetes.io/revision\":\"5\"},\"creationTimestamp\":\"2022-08-23T21:17:10Z\",\"generation\":5,\"name\":\"absence-tracker\",\"namespace\":\"default\",\"resourceVersion\":\"3251040\",\"uid\":\"b791ac4a-6ca7-452f-8e23-e307cd24c68a\"},\"spec\":{\"progressDeadlineSeconds\":600,\"replicas\":1,\"revisionHistoryLimit\":10,\"selector\":{\"matchLabels\":{\"app\":\"absence-tracker\"}},\"strategy\":{\"rollingUpdate\":{\"maxSurge\":\"25%\",\"maxUnavailable\":\"25%\"},\"type\":\"RollingUpdate\"},\"template\":{\"metadata\":{\"creationTimestamp\":null,\"labels\":{\"app\":\"absence-tracker\"}},\"spec\":{\"automountServiceAccountToken\":true,\"containers\":[{\"env\":[{\"name\":\"SWAGGER_REDIRECT_URL\",\"value\":\"/api/absence-tracker/swagger-ui/index.html?url=/api/absence-tracker/v3/api-docs/all\"}],\"envFrom\":[{\"configMapRef\":{\"name\":\"absence-tracker-db-config\",\"optional\":false}},{\"configMapRef\":{\"name\":\"common-service-config\",\"optional\":false}},{\"configMapRef\":{\"name\":\"empty-config\",\"optional\":false}},{\"configMapRef\":{\"name\":\"empty-config\",\"optional\":false}},{\"configMapRef\":{\"name\":\"absence-tracker-service-embedded-config\",\"optional\":false}}],\"image\":\"docker-dev.javatar.com/absence-tracker:0.0.15.30\",\"imagePullPolicy\":\"Always\",\"livenessProbe\":{\"failureThreshold\":3,\"httpGet\":{\"path\":\"/actuator/health/liveness\",\"port\":8080,\"scheme\":\"HTTP\"},\"initialDelaySeconds\":120,\"periodSeconds\":15,\"successThreshold\":1,\"timeoutSeconds\":1},\"name\":\"absence-tracker\",\"ports\":[{\"containerPort\":8080,\"name\":\"service-port\",\"protocol\":\"TCP\"},{\"containerPort\":5050,\"name\":\"debug-port\",\"protocol\":\"TCP\"}],\"readinessProbe\":{\"failureThreshold\":3,\"httpGet\":{\"path\":\"/actuator/health/readiness\",\"port\":8080,\"scheme\":\"HTTP\"},\"initialDelaySeconds\":60,\"periodSeconds\":5,\"successThreshold\":1,\"timeoutSeconds\":1},\"resources\":{\"limits\":{\"cpu\":\"1\",\"memory\":\"2Gi\"},\"requests\":{\"cpu\":\"500m\",\"memory\":\"2Gi\"}},\"terminationMessagePath\":\"/dev/termination-log\",\"terminationMessagePolicy\":\"File\"}],\"dnsPolicy\":\"ClusterFirst\",\"enableServiceLinks\":true,\"imagePullSecrets\":[{\"name\":\"regcred\"}],\"nodeSelector\":{\"jl-svc-node\":\"true\"},\"restartPolicy\":\"Always\",\"schedulerName\":\"default-scheduler\",\"securityContext\":{},\"shareProcessNamespace\":false,\"terminationGracePeriodSeconds\":30}}},\"status\":{\"availableReplicas\":1,\"conditions\":[{\"lastTransitionTime\":\"2022-08-23T21:18:16Z\",\"lastUpdateTime\":\"2022-08-23T21:18:16Z\",\"message\":\"Deployment has minimum availability.\",\"reason\":\"MinimumReplicasAvailable\",\"status\":\"True\",\"type\":\"Available\"},{\"lastTransitionTime\":\"2022-08-23T21:17:10Z\",\"lastUpdateTime\":\"2022-09-01T08:19:19Z\",\"message\":\"ReplicaSet \\\"absence-tracker-55ff6d4677\\\" has successfully progressed.\",\"reason\":\"NewReplicaSetAvailable\",\"status\":\"True\",\"type\":\"Progressing\"}],\"observedGeneration\":5,\"readyReplicas\":1,\"replicas\":1,\"updatedReplicas\":1}}\n"
                },
                "creationTimestamp": "2022-08-23T21:17:10Z",
                "generation": 6,
                "name": "absence-tracker",
                "namespace": "default",
                "resourceVersion": "3954032",
                "uid": "b791ac4a-6ca7-452f-8e23-e307cd24c68a"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "app": "absence-tracker"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "25%",
                        "maxUnavailable": "25%"
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "absence-tracker"
                        }
                    },
                    "spec": {
                        "automountServiceAccountToken": true,
                        "containers": [
                            {
                                "env": [
                                    {
                                        "name": "SWAGGER_REDIRECT_URL",
                                        "value": "/api/absence-tracker/swagger-ui/index.html?url=/api/absence-tracker/v3/api-docs/all"
                                    }
                                ],
                                "envFrom": [
                                    {
                                        "configMapRef": {
                                            "name": "absence-tracker-db-config",
                                            "optional": false
                                        }
                                    },
                                    {
                                        "configMapRef": {
                                            "name": "common-service-config",
                                            "optional": false
                                        }
                                    },
                                    {
                                        "configMapRef": {
                                            "name": "empty-config",
                                            "optional": false
                                        }
                                    },
                                    {
                                        "configMapRef": {
                                            "name": "empty-config",
                                            "optional": false
                                        }
                                    },
                                    {
                                        "configMapRef": {
                                            "name": "absence-tracker-service-embedded-config",
                                            "optional": false
                                        }
                                    }
                                ],
                                "image": "docker-dev.javatar.com/absence-tracker:0.0.15.30",
                                "imagePullPolicy": "Always",
                                "livenessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/actuator/health/liveness",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 120,
                                    "periodSeconds": 15,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "name": "absence-tracker",
                                "ports": [
                                    {
                                        "containerPort": 8080,
                                        "name": "service-port",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 5050,
                                        "name": "debug-port",
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/actuator/health/readiness",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 60,
                                    "periodSeconds": 5,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "resources": {
                                    "limits": {
                                        "cpu": "1",
                                        "memory": "2Gi"
                                    },
                                    "requests": {
                                        "cpu": "500m",
                                        "memory": "2Gi"
                                    }
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File"
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "enableServiceLinks": true,
                        "imagePullSecrets": [
                            {
                                "name": "regcred"
                            }
                        ],
                        "nodeSelector": {
                            "jl-svc-node": "true"
                        },
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "shareProcessNamespace": false,
                        "terminationGracePeriodSeconds": 30
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2022-08-23T21:18:16Z",
                        "lastUpdateTime": "2022-08-23T21:18:16Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2022-08-23T21:17:10Z",
                        "lastUpdateTime": "2022-09-05T13:39:58Z",
                        "message": "ReplicaSet \"absence-tracker-6b4655ddd4\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 6,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/revision": "1"
                },
                "creationTimestamp": "2022-08-23T21:41:15Z",
                "generation": 1,
                "name": "calendar",
                "namespace": "default",
                "resourceVersion": "1845019",
                "uid": "94d676ea-f33f-4965-9a3b-abb17e5055e7"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "app": "calendar"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "25%",
                        "maxUnavailable": "25%"
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "calendar"
                        }
                    },
                    "spec": {
                        "automountServiceAccountToken": true,
                        "containers": [
                            {
                                "env": [
                                    {
                                        "name": "SWAGGER_REDIRECT_URL",
                                        "value": "/api/calendar/swagger-ui/index.html?url=/api/calendar/v3/api-docs/all"
                                    }
                                ],
                                "envFrom": [
                                    {
                                        "configMapRef": {
                                            "name": "calendar-db-config",
                                            "optional": false
                                        }
                                    },
                                    {
                                        "configMapRef": {
                                            "name": "common-service-config",
                                            "optional": false
                                        }
                                    },
                                    {
                                        "configMapRef": {
                                            "name": "empty-config",
                                            "optional": false
                                        }
                                    },
                                    {
                                        "configMapRef": {
                                            "name": "empty-config",
                                            "optional": false
                                        }
                                    },
                                    {
                                        "configMapRef": {
                                            "name": "calendar-service-embedded-config",
                                            "optional": false
                                        }
                                    }
                                ],
                                "image": "docker-dev.javatar.com/calendar:1.0.7",
                                "imagePullPolicy": "Always",
                                "livenessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/actuator/health/liveness",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 120,
                                    "periodSeconds": 15,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "name": "calendar",
                                "ports": [
                                    {
                                        "containerPort": 8080,
                                        "name": "service-port",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 5050,
                                        "name": "debug-port",
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/actuator/health/readiness",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 60,
                                    "periodSeconds": 5,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "resources": {
                                    "limits": {
                                        "cpu": "1",
                                        "memory": "2Gi"
                                    },
                                    "requests": {
                                        "cpu": "500m",
                                        "memory": "2Gi"
                                    }
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File"
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "enableServiceLinks": true,
                        "imagePullSecrets": [
                            {
                                "name": "regcred"
                            }
                        ],
                        "nodeSelector": {
                            "jl-svc-node": "true"
                        },
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "shareProcessNamespace": false,
                        "terminationGracePeriodSeconds": 30
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2022-08-23T21:42:26Z",
                        "lastUpdateTime": "2022-08-23T21:42:26Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2022-08-23T21:41:15Z",
                        "lastUpdateTime": "2022-08-23T21:42:26Z",
                        "message": "ReplicaSet \"calendar-6769bd79c\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/revision": "1"
                },
                "creationTimestamp": "2022-08-30T06:42:38Z",
                "generation": 1,
                "name": "customer-support",
                "namespace": "default",
                "resourceVersion": "2906628",
                "uid": "9ea84e76-f7b2-4774-82e3-c587cfb2f01c"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "app": "customer-support"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "25%",
                        "maxUnavailable": "25%"
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "customer-support"
                        }
                    },
                    "spec": {
                        "automountServiceAccountToken": true,
                        "containers": [
                            {
                                "env": [
                                    {
                                        "name": "SWAGGER_REDIRECT_URL",
                                        "value": "/api/customer-support/swagger-ui/index.html?url=/api/customer-support/v3/api-docs/all"
                                    }
                                ],
                                "envFrom": [
                                    {
                                        "configMapRef": {
                                            "name": "customer-support-db-config",
                                            "optional": false
                                        }
                                    },
                                    {
                                        "configMapRef": {
                                            "name": "common-service-config",
                                            "optional": false
                                        }
                                    },
                                    {
                                        "configMapRef": {
                                            "name": "empty-config",
                                            "optional": false
                                        }
                                    },
                                    {
                                        "configMapRef": {
                                            "name": "empty-config",
                                            "optional": false
                                        }
                                    },
                                    {
                                        "configMapRef": {
                                            "name": "customer-support-service-embedded-config",
                                            "optional": false
                                        }
                                    }
                                ],
                                "image": "docker-dev.javatar.com/customer-support:0.12",
                                "imagePullPolicy": "Always",
                                "livenessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/actuator/health/liveness",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 120,
                                    "periodSeconds": 15,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "name": "customer-support",
                                "ports": [
                                    {
                                        "containerPort": 8080,
                                        "name": "service-port",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 5050,
                                        "name": "debug-port",
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/actuator/health/readiness",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 60,
                                    "periodSeconds": 5,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "resources": {
                                    "limits": {
                                        "cpu": "1",
                                        "memory": "2Gi"
                                    },
                                    "requests": {
                                        "cpu": "500m",
                                        "memory": "2Gi"
                                    }
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File"
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "enableServiceLinks": true,
                        "imagePullSecrets": [
                            {
                                "name": "regcred"
                            }
                        ],
                        "nodeSelector": {
                            "jl-svc-node": "true"
                        },
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "shareProcessNamespace": false,
                        "terminationGracePeriodSeconds": 30
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2022-08-30T06:43:44Z",
                        "lastUpdateTime": "2022-08-30T06:43:44Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2022-08-30T06:42:38Z",
                        "lastUpdateTime": "2022-08-30T06:43:44Z",
                        "message": "ReplicaSet \"customer-support-6579c7ccb\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/revision": "5",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{\"deployment.kubernetes.io/revision\":\"4\"},\"creationTimestamp\":\"2022-08-24T18:42:04Z\",\"generation\":4,\"name\":\"file\",\"namespace\":\"default\",\"resourceVersion\":\"2906655\",\"uid\":\"9860a403-7ebd-41d1-ad99-110b924b7963\"},\"spec\":{\"progressDeadlineSeconds\":600,\"replicas\":1,\"revisionHistoryLimit\":10,\"selector\":{\"matchLabels\":{\"app\":\"file\"}},\"strategy\":{\"rollingUpdate\":{\"maxSurge\":\"25%\",\"maxUnavailable\":\"25%\"},\"type\":\"RollingUpdate\"},\"template\":{\"metadata\":{\"creationTimestamp\":null,\"labels\":{\"app\":\"file\"}},\"spec\":{\"automountServiceAccountToken\":true,\"containers\":[{\"env\":[{\"name\":\"SWAGGER_REDIRECT_URL\",\"value\":\"/api/file/swagger-ui/index.html?url=/api/file/v3/api-docs/all\"}],\"envFrom\":[{\"configMapRef\":{\"name\":\"file-db-config\",\"optional\":false}},{\"configMapRef\":{\"name\":\"common-service-config\",\"optional\":false}},{\"configMapRef\":{\"name\":\"empty-config\",\"optional\":false}},{\"configMapRef\":{\"name\":\"empty-config\",\"optional\":false}},{\"configMapRef\":{\"name\":\"file-service-embedded-config\",\"optional\":false}}],\"image\":\"docker-dev.javatar.com/file:0.0.20.25\",\"imagePullPolicy\":\"Always\",\"livenessProbe\":{\"failureThreshold\":3,\"httpGet\":{\"path\":\"/actuator/health/liveness\",\"port\":8080,\"scheme\":\"HTTP\"},\"initialDelaySeconds\":120,\"periodSeconds\":15,\"successThreshold\":1,\"timeoutSeconds\":1},\"name\":\"file\",\"ports\":[{\"containerPort\":8080,\"name\":\"service-port\",\"protocol\":\"TCP\"},{\"containerPort\":5050,\"name\":\"debug-port\",\"protocol\":\"TCP\"}],\"readinessProbe\":{\"failureThreshold\":3,\"httpGet\":{\"path\":\"/actuator/health/readiness\",\"port\":8080,\"scheme\":\"HTTP\"},\"initialDelaySeconds\":60,\"periodSeconds\":5,\"successThreshold\":1,\"timeoutSeconds\":1},\"resources\":{\"limits\":{\"cpu\":\"1\",\"memory\":\"2Gi\"},\"requests\":{\"cpu\":\"500m\",\"memory\":\"2Gi\"}},\"terminationMessagePath\":\"/dev/termination-log\",\"terminationMessagePolicy\":\"File\"}],\"dnsPolicy\":\"ClusterFirst\",\"enableServiceLinks\":true,\"imagePullSecrets\":[{\"name\":\"regcred\"}],\"nodeSelector\":{\"jl-svc-node\":\"true\"},\"restartPolicy\":\"Always\",\"schedulerName\":\"default-scheduler\",\"securityContext\":{},\"shareProcessNamespace\":false,\"terminationGracePeriodSeconds\":30}}},\"status\":{\"availableReplicas\":1,\"conditions\":[{\"lastTransitionTime\":\"2022-08-26T10:51:59Z\",\"lastUpdateTime\":\"2022-08-26T10:51:59Z\",\"message\":\"Deployment has minimum availability.\",\"reason\":\"MinimumReplicasAvailable\",\"status\":\"True\",\"type\":\"Available\"},{\"lastTransitionTime\":\"2022-08-24T18:42:04Z\",\"lastUpdateTime\":\"2022-08-30T06:43:48Z\",\"message\":\"ReplicaSet \\\"file-546dddcb89\\\" has successfully progressed.\",\"reason\":\"NewReplicaSetAvailable\",\"status\":\"True\",\"type\":\"Progressing\"}],\"observedGeneration\":4,\"readyReplicas\":1,\"replicas\":1,\"updatedReplicas\":1}}\n"
                },
                "creationTimestamp": "2022-08-24T18:42:04Z",
                "generation": 5,
                "name": "file",
                "namespace": "default",
                "resourceVersion": "2950348",
                "uid": "9860a403-7ebd-41d1-ad99-110b924b7963"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "app": "file"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "25%",
                        "maxUnavailable": "25%"
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "file"
                        }
                    },
                    "spec": {
                        "automountServiceAccountToken": true,
                        "containers": [
                            {
                                "env": [
                                    {
                                        "name": "SWAGGER_REDIRECT_URL",
                                        "value": "/api/file/swagger-ui/index.html?url=/api/file/v3/api-docs/all"
                                    }
                                ],
                                "envFrom": [
                                    {
                                        "configMapRef": {
                                            "name": "file-db-config",
                                            "optional": false
                                        }
                                    },
                                    {
                                        "configMapRef": {
                                            "name": "common-service-config",
                                            "optional": false
                                        }
                                    },
                                    {
                                        "configMapRef": {
                                            "name": "empty-config",
                                            "optional": false
                                        }
                                    },
                                    {
                                        "configMapRef": {
                                            "name": "empty-config",
                                            "optional": false
                                        }
                                    },
                                    {
                                        "configMapRef": {
                                            "name": "file-service-embedded-config",
                                            "optional": false
                                        }
                                    }
                                ],
                                "image": "docker-dev.javatar.com/file:0.0.20.25",
                                "imagePullPolicy": "Always",
                                "livenessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/actuator/health/liveness",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 120,
                                    "periodSeconds": 15,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "name": "file",
                                "ports": [
                                    {
                                        "containerPort": 8080,
                                        "name": "service-port",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 5050,
                                        "name": "debug-port",
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/actuator/health/readiness",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 60,
                                    "periodSeconds": 5,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "resources": {
                                    "limits": {
                                        "cpu": "1",
                                        "memory": "2Gi"
                                    },
                                    "requests": {
                                        "cpu": "500m",
                                        "memory": "2Gi"
                                    }
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File"
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "enableServiceLinks": true,
                        "imagePullSecrets": [
                            {
                                "name": "regcred"
                            }
                        ],
                        "nodeSelector": {
                            "jl-svc-node": "true"
                        },
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "shareProcessNamespace": false,
                        "terminationGracePeriodSeconds": 30
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2022-08-26T10:51:59Z",
                        "lastUpdateTime": "2022-08-26T10:51:59Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2022-08-24T18:42:04Z",
                        "lastUpdateTime": "2022-08-30T13:00:24Z",
                        "message": "ReplicaSet \"file-f46b5d5b8\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 5,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/revision": "1"
                },
                "creationTimestamp": "2022-08-23T21:19:52Z",
                "generation": 1,
                "name": "issue-tracking",
                "namespace": "default",
                "resourceVersion": "2269967",
                "uid": "46a0d0f8-cd5d-4568-88fe-b0df65a1e877"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "app": "issue-tracking"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "25%",
                        "maxUnavailable": "25%"
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "issue-tracking"
                        }
                    },
                    "spec": {
                        "automountServiceAccountToken": true,
                        "containers": [
                            {
                                "env": [
                                    {
                                        "name": "SWAGGER_REDIRECT_URL",
                                        "value": "/api/issue-tracking/swagger-ui/index.html?url=/api/issue-tracking/v3/api-docs/all"
                                    }
                                ],
                                "envFrom": [
                                    {
                                        "configMapRef": {
                                            "name": "issue-tracking-db-config",
                                            "optional": false
                                        }
                                    },
                                    {
                                        "configMapRef": {
                                            "name": "common-service-config",
                                            "optional": false
                                        }
                                    },
                                    {
                                        "configMapRef": {
                                            "name": "empty-config",
                                            "optional": false
                                        }
                                    },
                                    {
                                        "configMapRef": {
                                            "name": "empty-config",
                                            "optional": false
                                        }
                                    },
                                    {
                                        "configMapRef": {
                                            "name": "issue-tracking-service-embedded-config",
                                            "optional": false
                                        }
                                    }
                                ],
                                "image": "docker-dev.javatar.com/issue-tracking:0.0.97",
                                "imagePullPolicy": "Always",
                                "livenessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/actuator/health/liveness",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 120,
                                    "periodSeconds": 15,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "name": "issue-tracking",
                                "ports": [
                                    {
                                        "containerPort": 8080,
                                        "name": "service-port",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 5050,
                                        "name": "debug-port",
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/actuator/health/readiness",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 60,
                                    "periodSeconds": 5,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "resources": {
                                    "limits": {
                                        "cpu": "1",
                                        "memory": "2Gi"
                                    },
                                    "requests": {
                                        "cpu": "500m",
                                        "memory": "2Gi"
                                    }
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File"
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "enableServiceLinks": true,
                        "imagePullSecrets": [
                            {
                                "name": "regcred"
                            }
                        ],
                        "nodeSelector": {
                            "jl-svc-node": "true"
                        },
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "shareProcessNamespace": false,
                        "terminationGracePeriodSeconds": 30
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2022-08-23T21:19:52Z",
                        "lastUpdateTime": "2022-08-23T21:21:22Z",
                        "message": "ReplicaSet \"issue-tracking-6fd7cc4964\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    },
                    {
                        "lastTransitionTime": "2022-08-26T10:52:00Z",
                        "lastUpdateTime": "2022-08-26T10:52:00Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    }
                ],
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/revision": "1"
                },
                "creationTimestamp": "2022-08-13T14:08:28Z",
                "generation": 1,
                "name": "jaeger",
                "namespace": "default",
                "resourceVersion": "1838068",
                "uid": "bffb9c81-ad08-4e3a-a597-87112ec0321d"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "app": "jaeger"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "25%",
                        "maxUnavailable": "25%"
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "jaeger"
                        }
                    },
                    "spec": {
                        "automountServiceAccountToken": true,
                        "containers": [
                            {
                                "image": "jaegertracing/all-in-one:1.37",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "jaeger",
                                "ports": [
                                    {
                                        "containerPort": 6831,
                                        "name": "agent-port",
                                        "protocol": "UDP"
                                    },
                                    {
                                        "containerPort": 6832,
                                        "name": "agent2-port",
                                        "protocol": "UDP"
                                    },
                                    {
                                        "containerPort": 16686,
                                        "name": "ui-port",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 5778,
                                        "name": "config-port",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 14267,
                                        "name": "collector",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 14268,
                                        "name": "collector2",
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "cpu": "1",
                                        "memory": "2Gi"
                                    },
                                    "requests": {
                                        "cpu": "500m",
                                        "memory": "2Gi"
                                    }
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File"
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "enableServiceLinks": true,
                        "nodeSelector": {
                            "jl-infra-node": "true"
                        },
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "shareProcessNamespace": false,
                        "terminationGracePeriodSeconds": 30
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2022-08-13T14:08:28Z",
                        "lastUpdateTime": "2022-08-13T14:08:33Z",
                        "message": "ReplicaSet \"jaeger-5945bd5bbf\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    },
                    {
                        "lastTransitionTime": "2022-08-23T20:48:29Z",
                        "lastUpdateTime": "2022-08-23T20:48:29Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    }
                ],
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/revision": "1",
                    "meta.helm.sh/release-name": "jl-ic",
                    "meta.helm.sh/release-namespace": "default"
                },
                "creationTimestamp": "2022-08-13T14:05:46Z",
                "generation": 1,
                "labels": {
                    "app.kubernetes.io/component": "controller",
                    "app.kubernetes.io/instance": "jl-ic",
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/name": "ingress-nginx",
                    "app.kubernetes.io/part-of": "ingress-nginx",
                    "app.kubernetes.io/version": "1.3.0",
                    "helm.sh/chart": "ingress-nginx-4.2.0"
                },
                "name": "jl-ic-ingress-nginx-controller",
                "namespace": "default",
                "resourceVersion": "1850825",
                "uid": "0e544419-d6ea-4766-9d27-1b56f569b71e"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "app.kubernetes.io/component": "controller",
                        "app.kubernetes.io/instance": "jl-ic",
                        "app.kubernetes.io/name": "ingress-nginx"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "25%",
                        "maxUnavailable": "25%"
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app.kubernetes.io/component": "controller",
                            "app.kubernetes.io/instance": "jl-ic",
                            "app.kubernetes.io/name": "ingress-nginx"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "args": [
                                    "/nginx-ingress-controller",
                                    "--publish-service=$(POD_NAMESPACE)/jl-ic-ingress-nginx-controller",
                                    "--election-id=ingress-controller-leader",
                                    "--controller-class=k8s.io/ingress-nginx",
                                    "--ingress-class=nginx",
                                    "--configmap=$(POD_NAMESPACE)/jl-ic-ingress-nginx-controller",
                                    "--validating-webhook=:8443",
                                    "--validating-webhook-certificate=/usr/local/certificates/cert",
                                    "--validating-webhook-key=/usr/local/certificates/key"
                                ],
                                "env": [
                                    {
                                        "name": "POD_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.name"
                                            }
                                        }
                                    },
                                    {
                                        "name": "POD_NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    },
                                    {
                                        "name": "LD_PRELOAD",
                                        "value": "/usr/local/lib/libmimalloc.so"
                                    }
                                ],
                                "image": "registry.k8s.io/ingress-nginx/controller:v1.3.0@sha256:d1707ca76d3b044ab8a28277a2466a02100ee9f58a86af1535a3edf9323ea1b5",
                                "imagePullPolicy": "IfNotPresent",
                                "lifecycle": {
                                    "preStop": {
                                        "exec": {
                                            "command": [
                                                "/wait-shutdown"
                                            ]
                                        }
                                    }
                                },
                                "livenessProbe": {
                                    "failureThreshold": 5,
                                    "httpGet": {
                                        "path": "/healthz",
                                        "port": 10254,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 10,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "name": "controller",
                                "ports": [
                                    {
                                        "containerPort": 80,
                                        "name": "http",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 443,
                                        "name": "https",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 8443,
                                        "name": "webhook",
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/healthz",
                                        "port": 10254,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 10,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "resources": {
                                    "requests": {
                                        "cpu": "100m",
                                        "memory": "90Mi"
                                    }
                                },
                                "securityContext": {
                                    "allowPrivilegeEscalation": true,
                                    "capabilities": {
                                        "add": [
                                            "NET_BIND_SERVICE"
                                        ],
                                        "drop": [
                                            "ALL"
                                        ]
                                    },
                                    "runAsUser": 101
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/usr/local/certificates/",
                                        "name": "webhook-cert",
                                        "readOnly": true
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "nodeSelector": {
                            "kubernetes.io/os": "linux"
                        },
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "serviceAccount": "jl-ic-ingress-nginx",
                        "serviceAccountName": "jl-ic-ingress-nginx",
                        "terminationGracePeriodSeconds": 300,
                        "volumes": [
                            {
                                "name": "webhook-cert",
                                "secret": {
                                    "defaultMode": 420,
                                    "secretName": "jl-ic-ingress-nginx-admission"
                                }
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2022-08-13T14:05:46Z",
                        "lastUpdateTime": "2022-08-13T14:06:06Z",
                        "message": "ReplicaSet \"jl-ic-ingress-nginx-controller-7c6464ccf9\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    },
                    {
                        "lastTransitionTime": "2022-08-23T22:31:29Z",
                        "lastUpdateTime": "2022-08-23T22:31:29Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    }
                ],
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/revision": "4",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{\"deployment.kubernetes.io/revision\":\"3\"},\"creationTimestamp\":\"2022-08-23T21:06:13Z\",\"generation\":3,\"name\":\"job\",\"namespace\":\"default\",\"resourceVersion\":\"4555569\",\"uid\":\"ec190ff5-83fe-4b0a-bb96-adc36b51a03d\"},\"spec\":{\"progressDeadlineSeconds\":600,\"replicas\":1,\"revisionHistoryLimit\":10,\"selector\":{\"matchLabels\":{\"app\":\"job\"}},\"strategy\":{\"rollingUpdate\":{\"maxSurge\":\"25%\",\"maxUnavailable\":\"25%\"},\"type\":\"RollingUpdate\"},\"template\":{\"metadata\":{\"creationTimestamp\":null,\"labels\":{\"app\":\"job\"}},\"spec\":{\"automountServiceAccountToken\":true,\"containers\":[{\"env\":[{\"name\":\"SWAGGER_REDIRECT_URL\",\"value\":\"/api/job/swagger-ui/index.html?url=/api/job/v3/api-docs/all\"}],\"envFrom\":[{\"configMapRef\":{\"name\":\"job-db-config\",\"optional\":false}},{\"configMapRef\":{\"name\":\"common-service-config\",\"optional\":false}},{\"configMapRef\":{\"name\":\"empty-config\",\"optional\":false}},{\"configMapRef\":{\"name\":\"empty-config\",\"optional\":false}},{\"configMapRef\":{\"name\":\"job-service-embedded-config\",\"optional\":false}}],\"image\":\"docker-dev.javatar.com/job:0.0.169.176\",\"imagePullPolicy\":\"Always\",\"livenessProbe\":{\"failureThreshold\":3,\"httpGet\":{\"path\":\"/actuator/health/liveness\",\"port\":8080,\"scheme\":\"HTTP\"},\"initialDelaySeconds\":120,\"periodSeconds\":15,\"successThreshold\":1,\"timeoutSeconds\":1},\"name\":\"job\",\"ports\":[{\"containerPort\":8080,\"name\":\"service-port\",\"protocol\":\"TCP\"},{\"containerPort\":5050,\"name\":\"debug-port\",\"protocol\":\"TCP\"}],\"readinessProbe\":{\"failureThreshold\":3,\"httpGet\":{\"path\":\"/actuator/health/readiness\",\"port\":8080,\"scheme\":\"HTTP\"},\"initialDelaySeconds\":60,\"periodSeconds\":5,\"successThreshold\":1,\"timeoutSeconds\":1},\"resources\":{\"limits\":{\"cpu\":\"1\",\"memory\":\"2Gi\"},\"requests\":{\"cpu\":\"500m\",\"memory\":\"2Gi\"}},\"terminationMessagePath\":\"/dev/termination-log\",\"terminationMessagePolicy\":\"File\"}],\"dnsPolicy\":\"ClusterFirst\",\"enableServiceLinks\":true,\"imagePullSecrets\":[{\"name\":\"regcred\"}],\"nodeSelector\":{\"jl-svc-node\":\"true\"},\"restartPolicy\":\"Always\",\"schedulerName\":\"default-scheduler\",\"securityContext\":{},\"shareProcessNamespace\":false,\"terminationGracePeriodSeconds\":30}}},\"status\":{\"availableReplicas\":1,\"conditions\":[{\"lastTransitionTime\":\"2022-08-23T21:06:13Z\",\"lastUpdateTime\":\"2022-09-05T15:35:23Z\",\"message\":\"ReplicaSet \\\"job-5779658bf8\\\" has successfully progressed.\",\"reason\":\"NewReplicaSetAvailable\",\"status\":\"True\",\"type\":\"Progressing\"},{\"lastTransitionTime\":\"2022-09-09T04:22:28Z\",\"lastUpdateTime\":\"2022-09-09T04:22:28Z\",\"message\":\"Deployment has minimum availability.\",\"reason\":\"MinimumReplicasAvailable\",\"status\":\"True\",\"type\":\"Available\"}],\"observedGeneration\":3,\"readyReplicas\":1,\"replicas\":1,\"updatedReplicas\":1}}\n"
                },
                "creationTimestamp": "2022-08-23T21:06:13Z",
                "generation": 4,
                "name": "job",
                "namespace": "default",
                "resourceVersion": "4559498",
                "uid": "ec190ff5-83fe-4b0a-bb96-adc36b51a03d"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "app": "job"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "25%",
                        "maxUnavailable": "25%"
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "job"
                        }
                    },
                    "spec": {
                        "automountServiceAccountToken": true,
                        "containers": [
                            {
                                "env": [
                                    {
                                        "name": "SWAGGER_REDIRECT_URL",
                                        "value": "/api/job/swagger-ui/index.html?url=/api/job/v3/api-docs/all"
                                    }
                                ],
                                "envFrom": [
                                    {
                                        "configMapRef": {
                                            "name": "job-db-config",
                                            "optional": false
                                        }
                                    },
                                    {
                                        "configMapRef": {
                                            "name": "common-service-config",
                                            "optional": false
                                        }
                                    },
                                    {
                                        "configMapRef": {
                                            "name": "empty-config",
                                            "optional": false
                                        }
                                    },
                                    {
                                        "configMapRef": {
                                            "name": "empty-config",
                                            "optional": false
                                        }
                                    },
                                    {
                                        "configMapRef": {
                                            "name": "job-service-embedded-config",
                                            "optional": false
                                        }
                                    }
                                ],
                                "image": "docker-dev.javatar.com/job:0.0.169.176",
                                "imagePullPolicy": "Always",
                                "livenessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/actuator/health/liveness",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 120,
                                    "periodSeconds": 15,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "name": "job",
                                "ports": [
                                    {
                                        "containerPort": 8080,
                                        "name": "service-port",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 5050,
                                        "name": "debug-port",
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/actuator/health/readiness",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 60,
                                    "periodSeconds": 5,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "resources": {
                                    "limits": {
                                        "cpu": "1",
                                        "memory": "2Gi"
                                    },
                                    "requests": {
                                        "cpu": "500m",
                                        "memory": "2Gi"
                                    }
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File"
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "enableServiceLinks": true,
                        "imagePullSecrets": [
                            {
                                "name": "regcred"
                            }
                        ],
                        "nodeSelector": {
                            "jl-svc-node": "true"
                        },
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "shareProcessNamespace": false,
                        "terminationGracePeriodSeconds": 30
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2022-08-23T21:06:13Z",
                        "lastUpdateTime": "2022-09-09T04:41:58Z",
                        "message": "ReplicaSet \"job-8d8c5d64d\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    },
                    {
                        "lastTransitionTime": "2022-09-09T04:55:14Z",
                        "lastUpdateTime": "2022-09-09T04:55:14Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    }
                ],
                "observedGeneration": 4,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/revision": "14",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{\"deployment.kubernetes.io/revision\":\"13\"},\"creationTimestamp\":\"2022-08-23T21:14:11Z\",\"generation\":13,\"name\":\"jobs-lab-ui\",\"namespace\":\"default\",\"resourceVersion\":\"4965719\",\"uid\":\"3a0e22d8-2547-452f-9226-433a70853bb9\"},\"spec\":{\"progressDeadlineSeconds\":600,\"replicas\":1,\"revisionHistoryLimit\":10,\"selector\":{\"matchLabels\":{\"app\":\"jobs-lab-ui\"}},\"strategy\":{\"rollingUpdate\":{\"maxSurge\":\"25%\",\"maxUnavailable\":\"25%\"},\"type\":\"RollingUpdate\"},\"template\":{\"metadata\":{\"creationTimestamp\":null,\"labels\":{\"app\":\"jobs-lab-ui\"}},\"spec\":{\"automountServiceAccountToken\":true,\"containers\":[{\"envFrom\":[{\"configMapRef\":{\"name\":\"empty-config\",\"optional\":false}},{\"configMapRef\":{\"name\":\"jobs-lab-ui-service-embedded-config\",\"optional\":false}}],\"image\":\"docker-dev.javatar.com/jobs-lab-ui:0.0.355.189\",\"imagePullPolicy\":\"Always\",\"livenessProbe\":{\"failureThreshold\":3,\"httpGet\":{\"path\":\"/index.html\",\"port\":80,\"scheme\":\"HTTP\"},\"initialDelaySeconds\":10,\"periodSeconds\":5,\"successThreshold\":1,\"timeoutSeconds\":1},\"name\":\"jobs-lab-ui\",\"ports\":[{\"containerPort\":80,\"name\":\"service-port\",\"protocol\":\"TCP\"}],\"readinessProbe\":{\"failureThreshold\":3,\"httpGet\":{\"path\":\"/index.html\",\"port\":80,\"scheme\":\"HTTP\"},\"initialDelaySeconds\":10,\"periodSeconds\":10,\"successThreshold\":1,\"timeoutSeconds\":1},\"resources\":{\"limits\":{\"cpu\":\"1\",\"memory\":\"2Gi\"},\"requests\":{\"cpu\":\"500m\",\"memory\":\"2Gi\"}},\"terminationMessagePath\":\"/dev/termination-log\",\"terminationMessagePolicy\":\"File\"}],\"dnsPolicy\":\"ClusterFirst\",\"enableServiceLinks\":true,\"nodeSelector\":{\"jl-svc-node\":\"true\"},\"restartPolicy\":\"Always\",\"schedulerName\":\"default-scheduler\",\"securityContext\":{},\"shareProcessNamespace\":false,\"terminationGracePeriodSeconds\":30}}},\"status\":{\"availableReplicas\":1,\"conditions\":[{\"lastTransitionTime\":\"2022-08-26T10:52:00Z\",\"lastUpdateTime\":\"2022-08-26T10:52:00Z\",\"message\":\"Deployment has minimum availability.\",\"reason\":\"MinimumReplicasAvailable\",\"status\":\"True\",\"type\":\"Available\"},{\"lastTransitionTime\":\"2022-08-23T21:14:11Z\",\"lastUpdateTime\":\"2022-09-11T15:32:30Z\",\"message\":\"ReplicaSet \\\"jobs-lab-ui-5f45659db9\\\" has successfully progressed.\",\"reason\":\"NewReplicaSetAvailable\",\"status\":\"True\",\"type\":\"Progressing\"}],\"observedGeneration\":13,\"readyReplicas\":1,\"replicas\":1,\"updatedReplicas\":1}}\n"
                },
                "creationTimestamp": "2022-08-23T21:14:11Z",
                "generation": 14,
                "name": "jobs-lab-ui",
                "namespace": "default",
                "resourceVersion": "4968432",
                "uid": "3a0e22d8-2547-452f-9226-433a70853bb9"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "app": "jobs-lab-ui"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "25%",
                        "maxUnavailable": "25%"
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "jobs-lab-ui"
                        }
                    },
                    "spec": {
                        "automountServiceAccountToken": true,
                        "containers": [
                            {
                                "envFrom": [
                                    {
                                        "configMapRef": {
                                            "name": "empty-config",
                                            "optional": false
                                        }
                                    },
                                    {
                                        "configMapRef": {
                                            "name": "jobs-lab-ui-service-embedded-config",
                                            "optional": false
                                        }
                                    }
                                ],
                                "image": "docker-dev.javatar.com/jobs-lab-ui:0.0.355.189",
                                "imagePullPolicy": "Always",
                                "livenessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/index.html",
                                        "port": 80,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 10,
                                    "periodSeconds": 5,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "name": "jobs-lab-ui",
                                "ports": [
                                    {
                                        "containerPort": 80,
                                        "name": "service-port",
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/index.html",
                                        "port": 80,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 10,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "resources": {
                                    "limits": {
                                        "cpu": "1",
                                        "memory": "2Gi"
                                    },
                                    "requests": {
                                        "cpu": "500m",
                                        "memory": "2Gi"
                                    }
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File"
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "enableServiceLinks": true,
                        "nodeSelector": {
                            "jl-svc-node": "true"
                        },
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "shareProcessNamespace": false,
                        "terminationGracePeriodSeconds": 30
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2022-08-26T10:52:00Z",
                        "lastUpdateTime": "2022-08-26T10:52:00Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2022-08-23T21:14:11Z",
                        "lastUpdateTime": "2022-09-11T15:55:37Z",
                        "message": "ReplicaSet \"jobs-lab-ui-5d7c9bd4bf\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 14,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/revision": "2",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{\"deployment.kubernetes.io/revision\":\"1\"},\"creationTimestamp\":\"2022-08-23T21:14:11Z\",\"generation\":1,\"name\":\"k8s-gateway\",\"namespace\":\"default\",\"resourceVersion\":\"1841544\",\"uid\":\"9d00cb87-af13-4cf1-8d17-ad852ed69e66\"},\"spec\":{\"progressDeadlineSeconds\":600,\"replicas\":1,\"revisionHistoryLimit\":10,\"selector\":{\"matchLabels\":{\"app\":\"k8s-gateway\"}},\"strategy\":{\"rollingUpdate\":{\"maxSurge\":\"25%\",\"maxUnavailable\":\"25%\"},\"type\":\"RollingUpdate\"},\"template\":{\"metadata\":{\"creationTimestamp\":null,\"labels\":{\"app\":\"k8s-gateway\"}},\"spec\":{\"automountServiceAccountToken\":true,\"containers\":[{\"env\":[{\"name\":\"SWAGGER_REDIRECT_URL\",\"value\":\"/api/k8s-gateway/swagger-ui/index.html?url=/api/k8s-gateway/v3/api-docs/all\"}],\"envFrom\":[{\"configMapRef\":{\"name\":\"common-service-config\",\"optional\":false}},{\"configMapRef\":{\"name\":\"empty-config\",\"optional\":false}},{\"configMapRef\":{\"name\":\"empty-config\",\"optional\":false}},{\"configMapRef\":{\"name\":\"empty-config\",\"optional\":false}},{\"configMapRef\":{\"name\":\"k8s-gateway-service-embedded-config\",\"optional\":false}}],\"image\":\"docker-dev.javatar.com/k8s-gateway:0.0.74.94\",\"imagePullPolicy\":\"Always\",\"livenessProbe\":{\"failureThreshold\":3,\"httpGet\":{\"path\":\"/actuator/health/liveness\",\"port\":8080,\"scheme\":\"HTTP\"},\"initialDelaySeconds\":120,\"periodSeconds\":15,\"successThreshold\":1,\"timeoutSeconds\":1},\"name\":\"k8s-gateway\",\"ports\":[{\"containerPort\":8080,\"name\":\"service-port\",\"protocol\":\"TCP\"},{\"containerPort\":5050,\"name\":\"debug-port\",\"protocol\":\"TCP\"}],\"readinessProbe\":{\"failureThreshold\":3,\"httpGet\":{\"path\":\"/actuator/health/readiness\",\"port\":8080,\"scheme\":\"HTTP\"},\"initialDelaySeconds\":60,\"periodSeconds\":5,\"successThreshold\":1,\"timeoutSeconds\":1},\"resources\":{\"limits\":{\"cpu\":\"1\",\"memory\":\"2Gi\"},\"requests\":{\"cpu\":\"500m\",\"memory\":\"2Gi\"}},\"terminationMessagePath\":\"/dev/termination-log\",\"terminationMessagePolicy\":\"File\"}],\"dnsPolicy\":\"ClusterFirst\",\"enableServiceLinks\":true,\"imagePullSecrets\":[{\"name\":\"regcred\"}],\"nodeSelector\":{\"jl-svc-node\":\"true\"},\"restartPolicy\":\"Always\",\"schedulerName\":\"default-scheduler\",\"securityContext\":{},\"shareProcessNamespace\":false,\"terminationGracePeriodSeconds\":30}}},\"status\":{\"availableReplicas\":1,\"conditions\":[{\"lastTransitionTime\":\"2022-08-23T21:15:22Z\",\"lastUpdateTime\":\"2022-08-23T21:15:22Z\",\"message\":\"Deployment has minimum availability.\",\"reason\":\"MinimumReplicasAvailable\",\"status\":\"True\",\"type\":\"Available\"},{\"lastTransitionTime\":\"2022-08-23T21:14:11Z\",\"lastUpdateTime\":\"2022-08-23T21:15:22Z\",\"message\":\"ReplicaSet \\\"k8s-gateway-55d865dd5c\\\" has successfully progressed.\",\"reason\":\"NewReplicaSetAvailable\",\"status\":\"True\",\"type\":\"Progressing\"}],\"observedGeneration\":1,\"readyReplicas\":1,\"replicas\":1,\"updatedReplicas\":1}}\n"
                },
                "creationTimestamp": "2022-08-23T21:14:11Z",
                "generation": 2,
                "name": "k8s-gateway",
                "namespace": "default",
                "resourceVersion": "3197427",
                "uid": "9d00cb87-af13-4cf1-8d17-ad852ed69e66"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "app": "k8s-gateway"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "25%",
                        "maxUnavailable": "25%"
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "k8s-gateway"
                        }
                    },
                    "spec": {
                        "automountServiceAccountToken": true,
                        "containers": [
                            {
                                "env": [
                                    {
                                        "name": "SWAGGER_REDIRECT_URL",
                                        "value": "/api/k8s-gateway/swagger-ui/index.html?url=/api/k8s-gateway/v3/api-docs/all"
                                    }
                                ],
                                "envFrom": [
                                    {
                                        "configMapRef": {
                                            "name": "common-service-config",
                                            "optional": false
                                        }
                                    },
                                    {
                                        "configMapRef": {
                                            "name": "empty-config",
                                            "optional": false
                                        }
                                    },
                                    {
                                        "configMapRef": {
                                            "name": "empty-config",
                                            "optional": false
                                        }
                                    },
                                    {
                                        "configMapRef": {
                                            "name": "empty-config",
                                            "optional": false
                                        }
                                    },
                                    {
                                        "configMapRef": {
                                            "name": "k8s-gateway-service-embedded-config",
                                            "optional": false
                                        }
                                    }
                                ],
                                "image": "docker-dev.javatar.com/k8s-gateway:0.0.74.94",
                                "imagePullPolicy": "Always",
                                "livenessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/actuator/health/liveness",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 120,
                                    "periodSeconds": 15,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "name": "k8s-gateway",
                                "ports": [
                                    {
                                        "containerPort": 8080,
                                        "name": "service-port",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 5050,
                                        "name": "debug-port",
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/actuator/health/readiness",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 60,
                                    "periodSeconds": 5,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "resources": {
                                    "limits": {
                                        "cpu": "1",
                                        "memory": "2Gi"
                                    },
                                    "requests": {
                                        "cpu": "500m",
                                        "memory": "2Gi"
                                    }
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File"
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "enableServiceLinks": true,
                        "imagePullSecrets": [
                            {
                                "name": "regcred"
                            }
                        ],
                        "nodeSelector": {
                            "jl-svc-node": "true"
                        },
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "shareProcessNamespace": false,
                        "terminationGracePeriodSeconds": 30
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2022-08-23T21:15:22Z",
                        "lastUpdateTime": "2022-08-23T21:15:22Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2022-08-23T21:14:11Z",
                        "lastUpdateTime": "2022-09-01T00:36:16Z",
                        "message": "ReplicaSet \"k8s-gateway-7664897579\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 2,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/revision": "1"
                },
                "creationTimestamp": "2022-08-12T20:14:52Z",
                "generation": 1,
                "name": "kafka-broker-0",
                "namespace": "default",
                "resourceVersion": "2269957",
                "uid": "c7c8af96-4873-45c7-89d9-feaf19550c9d"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "app": "kafka-broker-0"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "25%",
                        "maxUnavailable": "25%"
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "kafka-broker-0"
                        }
                    },
                    "spec": {
                        "automountServiceAccountToken": true,
                        "containers": [
                            {
                                "env": [
                                    {
                                        "name": "KAFKA_BROKER_ID",
                                        "value": "0"
                                    },
                                    {
                                        "name": "KAFKA_ADVERTISED_HOST_NAME",
                                        "value": "kafka-broker-0"
                                    },
                                    {
                                        "name": "KAFKA_ZOOKEEPER_CONNECT",
                                        "value": "zoo-0:2181,zoo-1:2181,zoo-2:2181"
                                    },
                                    {
                                        "name": "KAFKA_NUM_NETWORK_THREADS",
                                        "value": "15"
                                    },
                                    {
                                        "name": "KAFKA_NUM_IO_THREADS",
                                        "value": "20"
                                    },
                                    {
                                        "name": "KAFKA_ADVERTISED_LISTENERS",
                                        "value": "PLAINTEXT://kafka-broker-0:9092"
                                    },
                                    {
                                        "name": "KAFKA_LISTENERS",
                                        "value": "PLAINTEXT://0.0.0.0:9092"
                                    },
                                    {
                                        "name": "KAFKA_AUTO_CREATE_TOPICS_ENABLE",
                                        "value": "false"
                                    }
                                ],
                                "image": "confluentinc/cp-kafka:7.2.1.amd64",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "kafka-broker-0",
                                "ports": [
                                    {
                                        "containerPort": 9092,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 9093,
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "cpu": "1500m",
                                        "memory": "2Gi"
                                    },
                                    "requests": {
                                        "cpu": "500m",
                                        "memory": "2Gi"
                                    }
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/kafka",
                                        "mountPropagation": "None",
                                        "name": "kafka-broker-kafka-data-volume-mount-0"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "enableServiceLinks": true,
                        "nodeSelector": {
                            "kafka-node-with-volume-0": "true"
                        },
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "shareProcessNamespace": false,
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "name": "kafka-broker-kafka-data-volume-mount-0",
                                "persistentVolumeClaim": {
                                    "claimName": "kafka-broker-pvc-0"
                                }
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2022-08-12T20:14:52Z",
                        "lastUpdateTime": "2022-08-12T20:14:58Z",
                        "message": "ReplicaSet \"kafka-broker-0-5b4f868765\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    },
                    {
                        "lastTransitionTime": "2022-08-26T10:51:59Z",
                        "lastUpdateTime": "2022-08-26T10:51:59Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    }
                ],
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/revision": "1"
                },
                "creationTimestamp": "2022-08-12T20:14:52Z",
                "generation": 1,
                "name": "kafka-broker-1",
                "namespace": "default",
                "resourceVersion": "1837503",
                "uid": "5da90efc-c7b9-42ed-bc50-e984eab27144"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "app": "kafka-broker-1"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "25%",
                        "maxUnavailable": "25%"
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "kafka-broker-1"
                        }
                    },
                    "spec": {
                        "automountServiceAccountToken": true,
                        "containers": [
                            {
                                "env": [
                                    {
                                        "name": "KAFKA_BROKER_ID",
                                        "value": "1"
                                    },
                                    {
                                        "name": "KAFKA_ADVERTISED_HOST_NAME",
                                        "value": "kafka-broker-1"
                                    },
                                    {
                                        "name": "KAFKA_ZOOKEEPER_CONNECT",
                                        "value": "zoo-0:2181,zoo-1:2181,zoo-2:2181"
                                    },
                                    {
                                        "name": "KAFKA_NUM_NETWORK_THREADS",
                                        "value": "15"
                                    },
                                    {
                                        "name": "KAFKA_NUM_IO_THREADS",
                                        "value": "20"
                                    },
                                    {
                                        "name": "KAFKA_ADVERTISED_LISTENERS",
                                        "value": "PLAINTEXT://kafka-broker-1:9092"
                                    },
                                    {
                                        "name": "KAFKA_LISTENERS",
                                        "value": "PLAINTEXT://0.0.0.0:9092"
                                    },
                                    {
                                        "name": "KAFKA_AUTO_CREATE_TOPICS_ENABLE",
                                        "value": "false"
                                    }
                                ],
                                "image": "confluentinc/cp-kafka:7.2.1.amd64",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "kafka-broker-1",
                                "ports": [
                                    {
                                        "containerPort": 9092,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 9093,
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "cpu": "1500m",
                                        "memory": "2Gi"
                                    },
                                    "requests": {
                                        "cpu": "500m",
                                        "memory": "2Gi"
                                    }
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/kafka",
                                        "mountPropagation": "None",
                                        "name": "kafka-broker-kafka-data-volume-mount-1"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "enableServiceLinks": true,
                        "nodeSelector": {
                            "kafka-node-with-volume-1": "true"
                        },
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "shareProcessNamespace": false,
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "name": "kafka-broker-kafka-data-volume-mount-1",
                                "persistentVolumeClaim": {
                                    "claimName": "kafka-broker-pvc-1"
                                }
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2022-08-12T20:14:52Z",
                        "lastUpdateTime": "2022-08-12T20:14:57Z",
                        "message": "ReplicaSet \"kafka-broker-1-6f9f998b88\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    },
                    {
                        "lastTransitionTime": "2022-08-23T20:46:47Z",
                        "lastUpdateTime": "2022-08-23T20:46:47Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    }
                ],
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/revision": "1"
                },
                "creationTimestamp": "2022-08-12T20:14:52Z",
                "generation": 1,
                "name": "kafka-broker-2",
                "namespace": "default",
                "resourceVersion": "1837697",
                "uid": "ef016b70-41ee-408c-b31d-2733750fee3c"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "app": "kafka-broker-2"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "25%",
                        "maxUnavailable": "25%"
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "kafka-broker-2"
                        }
                    },
                    "spec": {
                        "automountServiceAccountToken": true,
                        "containers": [
                            {
                                "env": [
                                    {
                                        "name": "KAFKA_BROKER_ID",
                                        "value": "2"
                                    },
                                    {
                                        "name": "KAFKA_ADVERTISED_HOST_NAME",
                                        "value": "kafka-broker-2"
                                    },
                                    {
                                        "name": "KAFKA_ZOOKEEPER_CONNECT",
                                        "value": "zoo-0:2181,zoo-1:2181,zoo-2:2181"
                                    },
                                    {
                                        "name": "KAFKA_NUM_NETWORK_THREADS",
                                        "value": "15"
                                    },
                                    {
                                        "name": "KAFKA_NUM_IO_THREADS",
                                        "value": "20"
                                    },
                                    {
                                        "name": "KAFKA_ADVERTISED_LISTENERS",
                                        "value": "PLAINTEXT://kafka-broker-2:9092"
                                    },
                                    {
                                        "name": "KAFKA_LISTENERS",
                                        "value": "PLAINTEXT://0.0.0.0:9092"
                                    },
                                    {
                                        "name": "KAFKA_AUTO_CREATE_TOPICS_ENABLE",
                                        "value": "false"
                                    }
                                ],
                                "image": "confluentinc/cp-kafka:7.2.1.amd64",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "kafka-broker-2",
                                "ports": [
                                    {
                                        "containerPort": 9092,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 9093,
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "cpu": "1500m",
                                        "memory": "2Gi"
                                    },
                                    "requests": {
                                        "cpu": "500m",
                                        "memory": "2Gi"
                                    }
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/kafka",
                                        "mountPropagation": "None",
                                        "name": "kafka-broker-kafka-data-volume-mount-2"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "enableServiceLinks": true,
                        "nodeSelector": {
                            "kafka-node-with-volume-2": "true"
                        },
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "shareProcessNamespace": false,
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "name": "kafka-broker-kafka-data-volume-mount-2",
                                "persistentVolumeClaim": {
                                    "claimName": "kafka-broker-pvc-2"
                                }
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2022-08-12T20:14:52Z",
                        "lastUpdateTime": "2022-08-12T20:15:04Z",
                        "message": "ReplicaSet \"kafka-broker-2-54bbf4f459\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    },
                    {
                        "lastTransitionTime": "2022-08-23T20:47:27Z",
                        "lastUpdateTime": "2022-08-23T20:47:27Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    }
                ],
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/revision": "1"
                },
                "creationTimestamp": "2022-08-23T21:18:27Z",
                "generation": 1,
                "name": "kafka-topics-initializer",
                "namespace": "default",
                "resourceVersion": "1842214",
                "uid": "5adc5fc2-80c9-44cf-96a7-7eaa038f1679"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "app": "kafka-topics-initializer"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "25%",
                        "maxUnavailable": "25%"
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "kafka-topics-initializer"
                        }
                    },
                    "spec": {
                        "automountServiceAccountToken": true,
                        "containers": [
                            {
                                "env": [
                                    {
                                        "name": "SWAGGER_REDIRECT_URL",
                                        "value": "/api/kafka-topics-initializer/swagger-ui/index.html?url=/api/kafka-topics-initializer/v3/api-docs/all"
                                    }
                                ],
                                "envFrom": [
                                    {
                                        "configMapRef": {
                                            "name": "common-service-config",
                                            "optional": false
                                        }
                                    },
                                    {
                                        "configMapRef": {
                                            "name": "empty-config",
                                            "optional": false
                                        }
                                    },
                                    {
                                        "configMapRef": {
                                            "name": "empty-config",
                                            "optional": false
                                        }
                                    },
                                    {
                                        "configMapRef": {
                                            "name": "empty-config",
                                            "optional": false
                                        }
                                    },
                                    {
                                        "configMapRef": {
                                            "name": "kafka-topics-initializer-service-embedded-config",
                                            "optional": false
                                        }
                                    }
                                ],
                                "image": "docker-dev.javatar.com/kafka-topics-initializer:0.0.8",
                                "imagePullPolicy": "Always",
                                "livenessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/actuator/health/liveness",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 120,
                                    "periodSeconds": 15,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "name": "kafka-topics-initializer",
                                "ports": [
                                    {
                                        "containerPort": 8080,
                                        "name": "service-port",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 5050,
                                        "name": "debug-port",
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/actuator/health/readiness",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 60,
                                    "periodSeconds": 5,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "resources": {
                                    "limits": {
                                        "cpu": "1",
                                        "memory": "2Gi"
                                    },
                                    "requests": {
                                        "cpu": "500m",
                                        "memory": "2Gi"
                                    }
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File"
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "enableServiceLinks": true,
                        "imagePullSecrets": [
                            {
                                "name": "regcred"
                            }
                        ],
                        "nodeSelector": {
                            "jl-svc-node": "true"
                        },
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "shareProcessNamespace": false,
                        "terminationGracePeriodSeconds": 30
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2022-08-23T21:19:32Z",
                        "lastUpdateTime": "2022-08-23T21:19:32Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2022-08-23T21:18:27Z",
                        "lastUpdateTime": "2022-08-23T21:19:32Z",
                        "message": "ReplicaSet \"kafka-topics-initializer-56bdd647c\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/revision": "1"
                },
                "creationTimestamp": "2022-08-23T21:41:15Z",
                "generation": 1,
                "name": "mail-plugin",
                "namespace": "default",
                "resourceVersion": "1845003",
                "uid": "2a2c5643-ec3b-4b47-b038-10338e1ff4c8"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "app": "mail-plugin"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "25%",
                        "maxUnavailable": "25%"
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "mail-plugin"
                        }
                    },
                    "spec": {
                        "automountServiceAccountToken": true,
                        "containers": [
                            {
                                "env": [
                                    {
                                        "name": "SWAGGER_REDIRECT_URL",
                                        "value": "/api/mail-plugin/swagger-ui/index.html?url=/api/mail-plugin/v3/api-docs/all"
                                    }
                                ],
                                "envFrom": [
                                    {
                                        "configMapRef": {
                                            "name": "common-service-config",
                                            "optional": false
                                        }
                                    },
                                    {
                                        "configMapRef": {
                                            "name": "empty-config",
                                            "optional": false
                                        }
                                    },
                                    {
                                        "configMapRef": {
                                            "name": "empty-config",
                                            "optional": false
                                        }
                                    },
                                    {
                                        "configMapRef": {
                                            "name": "empty-config",
                                            "optional": false
                                        }
                                    },
                                    {
                                        "configMapRef": {
                                            "name": "mail-plugin-service-embedded-config",
                                            "optional": false
                                        }
                                    }
                                ],
                                "image": "docker-dev.javatar.com/mail-plugin:0.0.17",
                                "imagePullPolicy": "Always",
                                "livenessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/actuator/health/liveness",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 120,
                                    "periodSeconds": 15,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "name": "mail-plugin",
                                "ports": [
                                    {
                                        "containerPort": 8080,
                                        "name": "service-port",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 5050,
                                        "name": "debug-port",
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/actuator/health/readiness",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 60,
                                    "periodSeconds": 5,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "resources": {
                                    "limits": {
                                        "cpu": "1",
                                        "memory": "2Gi"
                                    },
                                    "requests": {
                                        "cpu": "500m",
                                        "memory": "2Gi"
                                    }
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File"
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "enableServiceLinks": true,
                        "imagePullSecrets": [
                            {
                                "name": "regcred"
                            }
                        ],
                        "nodeSelector": {
                            "jl-svc-node": "true"
                        },
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "shareProcessNamespace": false,
                        "terminationGracePeriodSeconds": 30
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2022-08-23T21:42:21Z",
                        "lastUpdateTime": "2022-08-23T21:42:21Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2022-08-23T21:41:15Z",
                        "lastUpdateTime": "2022-08-23T21:42:21Z",
                        "message": "ReplicaSet \"mail-plugin-794f845df9\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/revision": "4",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{\"deployment.kubernetes.io/revision\":\"3\"},\"creationTimestamp\":\"2022-08-23T21:41:15Z\",\"generation\":3,\"name\":\"notification\",\"namespace\":\"default\",\"resourceVersion\":\"4250086\",\"uid\":\"344d0cbc-b4ba-4d47-b12b-808be50b4e75\"},\"spec\":{\"progressDeadlineSeconds\":600,\"replicas\":1,\"revisionHistoryLimit\":10,\"selector\":{\"matchLabels\":{\"app\":\"notification\"}},\"strategy\":{\"rollingUpdate\":{\"maxSurge\":\"25%\",\"maxUnavailable\":\"25%\"},\"type\":\"RollingUpdate\"},\"template\":{\"metadata\":{\"creationTimestamp\":null,\"labels\":{\"app\":\"notification\"}},\"spec\":{\"automountServiceAccountToken\":true,\"containers\":[{\"env\":[{\"name\":\"SWAGGER_REDIRECT_URL\",\"value\":\"/api/notification/swagger-ui/index.html?url=/api/notification/v3/api-docs/all\"}],\"envFrom\":[{\"configMapRef\":{\"name\":\"notification-db-config\",\"optional\":false}},{\"configMapRef\":{\"name\":\"common-service-config\",\"optional\":false}},{\"configMapRef\":{\"name\":\"empty-config\",\"optional\":false}},{\"configMapRef\":{\"name\":\"empty-config\",\"optional\":false}},{\"configMapRef\":{\"name\":\"notification-service-embedded-config\",\"optional\":false}}],\"image\":\"docker-dev.javatar.com/notification:0.1.93.73\",\"imagePullPolicy\":\"Always\",\"livenessProbe\":{\"failureThreshold\":3,\"httpGet\":{\"path\":\"/actuator/health/liveness\",\"port\":8080,\"scheme\":\"HTTP\"},\"initialDelaySeconds\":120,\"periodSeconds\":15,\"successThreshold\":1,\"timeoutSeconds\":1},\"name\":\"notification\",\"ports\":[{\"containerPort\":8080,\"name\":\"service-port\",\"protocol\":\"TCP\"},{\"containerPort\":5050,\"name\":\"debug-port\",\"protocol\":\"TCP\"}],\"readinessProbe\":{\"failureThreshold\":3,\"httpGet\":{\"path\":\"/actuator/health/readiness\",\"port\":8080,\"scheme\":\"HTTP\"},\"initialDelaySeconds\":60,\"periodSeconds\":5,\"successThreshold\":1,\"timeoutSeconds\":1},\"resources\":{\"limits\":{\"cpu\":\"1\",\"memory\":\"2Gi\"},\"requests\":{\"cpu\":\"500m\",\"memory\":\"2Gi\"}},\"terminationMessagePath\":\"/dev/termination-log\",\"terminationMessagePolicy\":\"File\"}],\"dnsPolicy\":\"ClusterFirst\",\"enableServiceLinks\":true,\"imagePullSecrets\":[{\"name\":\"regcred\"}],\"nodeSelector\":{\"jl-svc-node\":\"true\"},\"restartPolicy\":\"Always\",\"schedulerName\":\"default-scheduler\",\"securityContext\":{},\"shareProcessNamespace\":false,\"terminationGracePeriodSeconds\":30}}},\"status\":{\"availableReplicas\":1,\"conditions\":[{\"lastTransitionTime\":\"2022-08-23T21:42:21Z\",\"lastUpdateTime\":\"2022-08-23T21:42:21Z\",\"message\":\"Deployment has minimum availability.\",\"reason\":\"MinimumReplicasAvailable\",\"status\":\"True\",\"type\":\"Available\"},{\"lastTransitionTime\":\"2022-08-23T21:41:15Z\",\"lastUpdateTime\":\"2022-09-07T08:21:29Z\",\"message\":\"ReplicaSet \\\"notification-7d5468dfbf\\\" has successfully progressed.\",\"reason\":\"NewReplicaSetAvailable\",\"status\":\"True\",\"type\":\"Progressing\"}],\"observedGeneration\":3,\"readyReplicas\":1,\"replicas\":1,\"updatedReplicas\":1}}\n"
                },
                "creationTimestamp": "2022-08-23T21:41:15Z",
                "generation": 4,
                "name": "notification",
                "namespace": "default",
                "resourceVersion": "4557803",
                "uid": "344d0cbc-b4ba-4d47-b12b-808be50b4e75"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "app": "notification"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "25%",
                        "maxUnavailable": "25%"
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "notification"
                        }
                    },
                    "spec": {
                        "automountServiceAccountToken": true,
                        "containers": [
                            {
                                "env": [
                                    {
                                        "name": "SWAGGER_REDIRECT_URL",
                                        "value": "/api/notification/swagger-ui/index.html?url=/api/notification/v3/api-docs/all"
                                    }
                                ],
                                "envFrom": [
                                    {
                                        "configMapRef": {
                                            "name": "notification-db-config",
                                            "optional": false
                                        }
                                    },
                                    {
                                        "configMapRef": {
                                            "name": "common-service-config",
                                            "optional": false
                                        }
                                    },
                                    {
                                        "configMapRef": {
                                            "name": "empty-config",
                                            "optional": false
                                        }
                                    },
                                    {
                                        "configMapRef": {
                                            "name": "empty-config",
                                            "optional": false
                                        }
                                    },
                                    {
                                        "configMapRef": {
                                            "name": "notification-service-embedded-config",
                                            "optional": false
                                        }
                                    }
                                ],
                                "image": "docker-dev.javatar.com/notification:0.1.93.73",
                                "imagePullPolicy": "Always",
                                "livenessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/actuator/health/liveness",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 120,
                                    "periodSeconds": 15,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "name": "notification",
                                "ports": [
                                    {
                                        "containerPort": 8080,
                                        "name": "service-port",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 5050,
                                        "name": "debug-port",
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/actuator/health/readiness",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 60,
                                    "periodSeconds": 5,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "resources": {
                                    "limits": {
                                        "cpu": "1",
                                        "memory": "2Gi"
                                    },
                                    "requests": {
                                        "cpu": "500m",
                                        "memory": "2Gi"
                                    }
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File"
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "enableServiceLinks": true,
                        "imagePullSecrets": [
                            {
                                "name": "regcred"
                            }
                        ],
                        "nodeSelector": {
                            "jl-svc-node": "true"
                        },
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "shareProcessNamespace": false,
                        "terminationGracePeriodSeconds": 30
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2022-08-23T21:42:21Z",
                        "lastUpdateTime": "2022-08-23T21:42:21Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2022-08-23T21:41:15Z",
                        "lastUpdateTime": "2022-09-09T04:41:17Z",
                        "message": "ReplicaSet \"notification-7986874b75\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 4,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/revision": "2",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{\"deployment.kubernetes.io/revision\":\"1\"},\"creationTimestamp\":\"2022-08-23T21:17:10Z\",\"generation\":1,\"name\":\"onboarding\",\"namespace\":\"default\",\"resourceVersion\":\"1842040\",\"uid\":\"2fa57e15-cfdf-4ee5-89a6-5fae32b4a359\"},\"spec\":{\"progressDeadlineSeconds\":600,\"replicas\":1,\"revisionHistoryLimit\":10,\"selector\":{\"matchLabels\":{\"app\":\"onboarding\"}},\"strategy\":{\"rollingUpdate\":{\"maxSurge\":\"25%\",\"maxUnavailable\":\"25%\"},\"type\":\"RollingUpdate\"},\"template\":{\"metadata\":{\"creationTimestamp\":null,\"labels\":{\"app\":\"onboarding\"}},\"spec\":{\"automountServiceAccountToken\":true,\"containers\":[{\"env\":[{\"name\":\"SWAGGER_REDIRECT_URL\",\"value\":\"/api/onboarding/swagger-ui/index.html?url=/api/onboarding/v3/api-docs/all\"}],\"envFrom\":[{\"configMapRef\":{\"name\":\"onboarding-db-config\",\"optional\":false}},{\"configMapRef\":{\"name\":\"common-service-config\",\"optional\":false}},{\"configMapRef\":{\"name\":\"empty-config\",\"optional\":false}},{\"configMapRef\":{\"name\":\"empty-config\",\"optional\":false}},{\"configMapRef\":{\"name\":\"onboarding-service-embedded-config\",\"optional\":false}}],\"image\":\"docker-dev.javatar.com/onboarding:0.0.42.59\",\"imagePullPolicy\":\"Always\",\"livenessProbe\":{\"failureThreshold\":3,\"httpGet\":{\"path\":\"/actuator/health/liveness\",\"port\":8080,\"scheme\":\"HTTP\"},\"initialDelaySeconds\":120,\"periodSeconds\":15,\"successThreshold\":1,\"timeoutSeconds\":1},\"name\":\"onboarding\",\"ports\":[{\"containerPort\":8080,\"name\":\"service-port\",\"protocol\":\"TCP\"},{\"containerPort\":5050,\"name\":\"debug-port\",\"protocol\":\"TCP\"}],\"readinessProbe\":{\"failureThreshold\":3,\"httpGet\":{\"path\":\"/actuator/health/readiness\",\"port\":8080,\"scheme\":\"HTTP\"},\"initialDelaySeconds\":60,\"periodSeconds\":5,\"successThreshold\":1,\"timeoutSeconds\":1},\"resources\":{\"limits\":{\"cpu\":\"1\",\"memory\":\"2Gi\"},\"requests\":{\"cpu\":\"500m\",\"memory\":\"2Gi\"}},\"terminationMessagePath\":\"/dev/termination-log\",\"terminationMessagePolicy\":\"File\"}],\"dnsPolicy\":\"ClusterFirst\",\"enableServiceLinks\":true,\"imagePullSecrets\":[{\"name\":\"regcred\"}],\"nodeSelector\":{\"jl-svc-node\":\"true\"},\"restartPolicy\":\"Always\",\"schedulerName\":\"default-scheduler\",\"securityContext\":{},\"shareProcessNamespace\":false,\"terminationGracePeriodSeconds\":30}}},\"status\":{\"availableReplicas\":1,\"conditions\":[{\"lastTransitionTime\":\"2022-08-23T21:18:20Z\",\"lastUpdateTime\":\"2022-08-23T21:18:20Z\",\"message\":\"Deployment has minimum availability.\",\"reason\":\"MinimumReplicasAvailable\",\"status\":\"True\",\"type\":\"Available\"},{\"lastTransitionTime\":\"2022-08-23T21:17:10Z\",\"lastUpdateTime\":\"2022-08-23T21:18:20Z\",\"message\":\"ReplicaSet \\\"onboarding-5c5dcc84bc\\\" has successfully progressed.\",\"reason\":\"NewReplicaSetAvailable\",\"status\":\"True\",\"type\":\"Progressing\"}],\"observedGeneration\":1,\"readyReplicas\":1,\"replicas\":1,\"updatedReplicas\":1}}\n"
                },
                "creationTimestamp": "2022-08-23T21:17:10Z",
                "generation": 4,
                "name": "onboarding",
                "namespace": "default",
                "resourceVersion": "3257644",
                "uid": "2fa57e15-cfdf-4ee5-89a6-5fae32b4a359"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "app": "onboarding"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "25%",
                        "maxUnavailable": "25%"
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "onboarding"
                        }
                    },
                    "spec": {
                        "automountServiceAccountToken": true,
                        "containers": [
                            {
                                "env": [
                                    {
                                        "name": "SWAGGER_REDIRECT_URL",
                                        "value": "/api/onboarding/swagger-ui/index.html?url=/api/onboarding/v3/api-docs/all"
                                    }
                                ],
                                "envFrom": [
                                    {
                                        "configMapRef": {
                                            "name": "onboarding-db-config",
                                            "optional": false
                                        }
                                    },
                                    {
                                        "configMapRef": {
                                            "name": "common-service-config",
                                            "optional": false
                                        }
                                    },
                                    {
                                        "configMapRef": {
                                            "name": "empty-config",
                                            "optional": false
                                        }
                                    },
                                    {
                                        "configMapRef": {
                                            "name": "empty-config",
                                            "optional": false
                                        }
                                    },
                                    {
                                        "configMapRef": {
                                            "name": "onboarding-service-embedded-config",
                                            "optional": false
                                        }
                                    }
                                ],
                                "image": "docker-dev.javatar.com/onboarding:0.0.42.59",
                                "imagePullPolicy": "Always",
                                "livenessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/actuator/health/liveness",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 120,
                                    "periodSeconds": 15,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "name": "onboarding",
                                "ports": [
                                    {
                                        "containerPort": 8080,
                                        "name": "service-port",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 5050,
                                        "name": "debug-port",
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/actuator/health/readiness",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 60,
                                    "periodSeconds": 5,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "resources": {
                                    "limits": {
                                        "cpu": "1",
                                        "memory": "2Gi"
                                    },
                                    "requests": {
                                        "cpu": "500m",
                                        "memory": "2Gi"
                                    }
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File"
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "enableServiceLinks": true,
                        "imagePullSecrets": [
                            {
                                "name": "regcred"
                            }
                        ],
                        "nodeSelector": {
                            "jl-svc-node": "true"
                        },
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "shareProcessNamespace": false,
                        "terminationGracePeriodSeconds": 30
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2022-08-23T21:17:10Z",
                        "lastUpdateTime": "2022-08-30T13:39:13Z",
                        "message": "ReplicaSet \"onboarding-7f696bcbb6\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    },
                    {
                        "lastTransitionTime": "2022-09-01T09:13:25Z",
                        "lastUpdateTime": "2022-09-01T09:13:25Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    }
                ],
                "observedGeneration": 4,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/revision": "21",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{\"deployment.kubernetes.io/revision\":\"20\"},\"creationTimestamp\":\"2022-08-23T21:17:10Z\",\"generation\":20,\"name\":\"org-structure\",\"namespace\":\"default\",\"resourceVersion\":\"4439770\",\"uid\":\"e1a7570e-25a9-4a91-a2c9-1fa6ecd3a78e\"},\"spec\":{\"progressDeadlineSeconds\":600,\"replicas\":1,\"revisionHistoryLimit\":10,\"selector\":{\"matchLabels\":{\"app\":\"org-structure\"}},\"strategy\":{\"rollingUpdate\":{\"maxSurge\":\"25%\",\"maxUnavailable\":\"25%\"},\"type\":\"RollingUpdate\"},\"template\":{\"metadata\":{\"creationTimestamp\":null,\"labels\":{\"app\":\"org-structure\"}},\"spec\":{\"automountServiceAccountToken\":true,\"containers\":[{\"env\":[{\"name\":\"SWAGGER_REDIRECT_URL\",\"value\":\"/api/org-structure/swagger-ui/index.html?url=/api/org-structure/v3/api-docs/all\"}],\"envFrom\":[{\"configMapRef\":{\"name\":\"org-structure-db-config\",\"optional\":false}},{\"configMapRef\":{\"name\":\"common-service-config\",\"optional\":false}},{\"configMapRef\":{\"name\":\"empty-config\",\"optional\":false}},{\"configMapRef\":{\"name\":\"empty-config\",\"optional\":false}},{\"configMapRef\":{\"name\":\"org-structure-service-embedded-config\",\"optional\":false}}],\"image\":\"docker-dev.javatar.com/org-structure:0.0.237.297\",\"imagePullPolicy\":\"Always\",\"livenessProbe\":{\"failureThreshold\":3,\"httpGet\":{\"path\":\"/actuator/health/liveness\",\"port\":8080,\"scheme\":\"HTTP\"},\"initialDelaySeconds\":120,\"periodSeconds\":15,\"successThreshold\":1,\"timeoutSeconds\":1},\"name\":\"org-structure\",\"ports\":[{\"containerPort\":8080,\"name\":\"service-port\",\"protocol\":\"TCP\"},{\"containerPort\":5050,\"name\":\"debug-port\",\"protocol\":\"TCP\"}],\"readinessProbe\":{\"failureThreshold\":3,\"httpGet\":{\"path\":\"/actuator/health/readiness\",\"port\":8080,\"scheme\":\"HTTP\"},\"initialDelaySeconds\":60,\"periodSeconds\":5,\"successThreshold\":1,\"timeoutSeconds\":1},\"resources\":{\"limits\":{\"cpu\":\"1\",\"memory\":\"2Gi\"},\"requests\":{\"cpu\":\"500m\",\"memory\":\"2Gi\"}},\"terminationMessagePath\":\"/dev/termination-log\",\"terminationMessagePolicy\":\"File\"}],\"dnsPolicy\":\"ClusterFirst\",\"enableServiceLinks\":true,\"imagePullSecrets\":[{\"name\":\"regcred\"}],\"nodeSelector\":{\"jl-svc-node\":\"true\"},\"restartPolicy\":\"Always\",\"schedulerName\":\"default-scheduler\",\"securityContext\":{},\"shareProcessNamespace\":false,\"terminationGracePeriodSeconds\":30}}},\"status\":{\"availableReplicas\":1,\"conditions\":[{\"lastTransitionTime\":\"2022-08-23T21:18:16Z\",\"lastUpdateTime\":\"2022-08-23T21:18:16Z\",\"message\":\"Deployment has minimum availability.\",\"reason\":\"MinimumReplicasAvailable\",\"status\":\"True\",\"type\":\"Available\"},{\"lastTransitionTime\":\"2022-09-01T09:58:30Z\",\"lastUpdateTime\":\"2022-09-08T11:39:59Z\",\"message\":\"ReplicaSet \\\"org-structure-7bccdbd44f\\\" has successfully progressed.\",\"reason\":\"NewReplicaSetAvailable\",\"status\":\"True\",\"type\":\"Progressing\"}],\"observedGeneration\":20,\"readyReplicas\":1,\"replicas\":1,\"updatedReplicas\":1}}\n"
                },
                "creationTimestamp": "2022-08-23T21:17:10Z",
                "generation": 21,
                "name": "org-structure",
                "namespace": "default",
                "resourceVersion": "4568672",
                "uid": "e1a7570e-25a9-4a91-a2c9-1fa6ecd3a78e"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "app": "org-structure"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "25%",
                        "maxUnavailable": "25%"
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "org-structure"
                        }
                    },
                    "spec": {
                        "automountServiceAccountToken": true,
                        "containers": [
                            {
                                "env": [
                                    {
                                        "name": "SWAGGER_REDIRECT_URL",
                                        "value": "/api/org-structure/swagger-ui/index.html?url=/api/org-structure/v3/api-docs/all"
                                    }
                                ],
                                "envFrom": [
                                    {
                                        "configMapRef": {
                                            "name": "org-structure-db-config",
                                            "optional": false
                                        }
                                    },
                                    {
                                        "configMapRef": {
                                            "name": "common-service-config",
                                            "optional": false
                                        }
                                    },
                                    {
                                        "configMapRef": {
                                            "name": "empty-config",
                                            "optional": false
                                        }
                                    },
                                    {
                                        "configMapRef": {
                                            "name": "empty-config",
                                            "optional": false
                                        }
                                    },
                                    {
                                        "configMapRef": {
                                            "name": "org-structure-service-embedded-config",
                                            "optional": false
                                        }
                                    }
                                ],
                                "image": "docker-dev.javatar.com/org-structure:0.0.237.297",
                                "imagePullPolicy": "Always",
                                "livenessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/actuator/health/liveness",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 120,
                                    "periodSeconds": 15,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "name": "org-structure",
                                "ports": [
                                    {
                                        "containerPort": 8080,
                                        "name": "service-port",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 5050,
                                        "name": "debug-port",
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/actuator/health/readiness",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 60,
                                    "periodSeconds": 5,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "resources": {
                                    "limits": {
                                        "cpu": "1",
                                        "memory": "2Gi"
                                    },
                                    "requests": {
                                        "cpu": "500m",
                                        "memory": "2Gi"
                                    }
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File"
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "enableServiceLinks": true,
                        "imagePullSecrets": [
                            {
                                "name": "regcred"
                            }
                        ],
                        "nodeSelector": {
                            "jl-svc-node": "true"
                        },
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "shareProcessNamespace": false,
                        "terminationGracePeriodSeconds": 30
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2022-08-23T21:18:16Z",
                        "lastUpdateTime": "2022-08-23T21:18:16Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2022-09-01T09:58:30Z",
                        "lastUpdateTime": "2022-09-09T06:14:16Z",
                        "message": "ReplicaSet \"org-structure-7d7845ffb5\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 21,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/revision": "1"
                },
                "creationTimestamp": "2022-08-12T22:44:15Z",
                "generation": 5,
                "name": "postgres",
                "namespace": "default",
                "resourceVersion": "1849611",
                "uid": "ef3ccec6-064e-4ad7-911f-34bcca19e356"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "app": "postgres"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "25%",
                        "maxUnavailable": "25%"
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "postgres"
                        }
                    },
                    "spec": {
                        "automountServiceAccountToken": true,
                        "containers": [
                            {
                                "envFrom": [
                                    {
                                        "configMapRef": {
                                            "name": "postgres-postgres-config",
                                            "optional": false
                                        }
                                    }
                                ],
                                "image": "postgres:14",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "postgres",
                                "ports": [
                                    {
                                        "containerPort": 5432,
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "cpu": "2",
                                        "memory": "3Gi"
                                    },
                                    "requests": {
                                        "cpu": "2",
                                        "memory": "3Gi"
                                    }
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/var/lib/postgresql/data",
                                        "mountPropagation": "None",
                                        "name": "postgres-volume-mount"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "enableServiceLinks": true,
                        "nodeSelector": {
                            "postgres-node-with-volume": "true"
                        },
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "shareProcessNamespace": false,
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "name": "postgres-volume-mount",
                                "persistentVolumeClaim": {
                                    "claimName": "postgres-pg-pvc"
                                }
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2022-08-12T22:44:15Z",
                        "lastUpdateTime": "2022-08-12T22:44:22Z",
                        "message": "ReplicaSet \"postgres-5cfff45b98\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    },
                    {
                        "lastTransitionTime": "2022-08-23T22:21:23Z",
                        "lastUpdateTime": "2022-08-23T22:21:23Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    }
                ],
                "observedGeneration": 5,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/revision": "4",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{\"deployment.kubernetes.io/revision\":\"3\"},\"creationTimestamp\":\"2022-08-23T21:17:10Z\",\"generation\":3,\"name\":\"probation\",\"namespace\":\"default\",\"resourceVersion\":\"2953076\",\"uid\":\"6ca2d2e3-3fd2-4368-bcfa-875e10a9267b\"},\"spec\":{\"progressDeadlineSeconds\":600,\"replicas\":1,\"revisionHistoryLimit\":10,\"selector\":{\"matchLabels\":{\"app\":\"probation\"}},\"strategy\":{\"rollingUpdate\":{\"maxSurge\":\"25%\",\"maxUnavailable\":\"25%\"},\"type\":\"RollingUpdate\"},\"template\":{\"metadata\":{\"creationTimestamp\":null,\"labels\":{\"app\":\"probation\"}},\"spec\":{\"automountServiceAccountToken\":true,\"containers\":[{\"env\":[{\"name\":\"SWAGGER_REDIRECT_URL\",\"value\":\"/api/probation/swagger-ui/index.html?url=/api/probation/v3/api-docs/all\"}],\"envFrom\":[{\"configMapRef\":{\"name\":\"probation-db-config\",\"optional\":false}},{\"configMapRef\":{\"name\":\"common-service-config\",\"optional\":false}},{\"configMapRef\":{\"name\":\"empty-config\",\"optional\":false}},{\"configMapRef\":{\"name\":\"empty-config\",\"optional\":false}},{\"configMapRef\":{\"name\":\"probation-service-embedded-config\",\"optional\":false}}],\"image\":\"docker-dev.javatar.com/probation:0.0.56.60\",\"imagePullPolicy\":\"Always\",\"livenessProbe\":{\"failureThreshold\":3,\"httpGet\":{\"path\":\"/actuator/health/liveness\",\"port\":8080,\"scheme\":\"HTTP\"},\"initialDelaySeconds\":120,\"periodSeconds\":15,\"successThreshold\":1,\"timeoutSeconds\":1},\"name\":\"probation\",\"ports\":[{\"containerPort\":8080,\"name\":\"service-port\",\"protocol\":\"TCP\"},{\"containerPort\":5050,\"name\":\"debug-port\",\"protocol\":\"TCP\"}],\"readinessProbe\":{\"failureThreshold\":3,\"httpGet\":{\"path\":\"/actuator/health/readiness\",\"port\":8080,\"scheme\":\"HTTP\"},\"initialDelaySeconds\":60,\"periodSeconds\":5,\"successThreshold\":1,\"timeoutSeconds\":1},\"resources\":{\"limits\":{\"cpu\":\"1\",\"memory\":\"2Gi\"},\"requests\":{\"cpu\":\"500m\",\"memory\":\"2Gi\"}},\"terminationMessagePath\":\"/dev/termination-log\",\"terminationMessagePolicy\":\"File\"}],\"dnsPolicy\":\"ClusterFirst\",\"enableServiceLinks\":true,\"imagePullSecrets\":[{\"name\":\"regcred\"}],\"nodeSelector\":{\"jl-svc-node\":\"true\"},\"restartPolicy\":\"Always\",\"schedulerName\":\"default-scheduler\",\"securityContext\":{},\"shareProcessNamespace\":false,\"terminationGracePeriodSeconds\":30}}},\"status\":{\"availableReplicas\":1,\"conditions\":[{\"lastTransitionTime\":\"2022-08-26T10:51:59Z\",\"lastUpdateTime\":\"2022-08-26T10:51:59Z\",\"message\":\"Deployment has minimum availability.\",\"reason\":\"MinimumReplicasAvailable\",\"status\":\"True\",\"type\":\"Available\"},{\"lastTransitionTime\":\"2022-08-23T21:17:10Z\",\"lastUpdateTime\":\"2022-08-30T13:22:58Z\",\"message\":\"ReplicaSet \\\"probation-799ccfc6f7\\\" has successfully progressed.\",\"reason\":\"NewReplicaSetAvailable\",\"status\":\"True\",\"type\":\"Progressing\"}],\"observedGeneration\":3,\"readyReplicas\":1,\"replicas\":1,\"updatedReplicas\":1}}\n"
                },
                "creationTimestamp": "2022-08-23T21:17:10Z",
                "generation": 6,
                "name": "probation",
                "namespace": "default",
                "resourceVersion": "3257634",
                "uid": "6ca2d2e3-3fd2-4368-bcfa-875e10a9267b"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "app": "probation"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "25%",
                        "maxUnavailable": "25%"
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "probation"
                        }
                    },
                    "spec": {
                        "automountServiceAccountToken": true,
                        "containers": [
                            {
                                "env": [
                                    {
                                        "name": "SWAGGER_REDIRECT_URL",
                                        "value": "/api/probation/swagger-ui/index.html?url=/api/probation/v3/api-docs/all"
                                    }
                                ],
                                "envFrom": [
                                    {
                                        "configMapRef": {
                                            "name": "probation-db-config",
                                            "optional": false
                                        }
                                    },
                                    {
                                        "configMapRef": {
                                            "name": "common-service-config",
                                            "optional": false
                                        }
                                    },
                                    {
                                        "configMapRef": {
                                            "name": "empty-config",
                                            "optional": false
                                        }
                                    },
                                    {
                                        "configMapRef": {
                                            "name": "empty-config",
                                            "optional": false
                                        }
                                    },
                                    {
                                        "configMapRef": {
                                            "name": "probation-service-embedded-config",
                                            "optional": false
                                        }
                                    }
                                ],
                                "image": "docker-dev.javatar.com/probation:0.0.56.60",
                                "imagePullPolicy": "Always",
                                "livenessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/actuator/health/liveness",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 120,
                                    "periodSeconds": 15,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "name": "probation",
                                "ports": [
                                    {
                                        "containerPort": 8080,
                                        "name": "service-port",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 5050,
                                        "name": "debug-port",
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/actuator/health/readiness",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 60,
                                    "periodSeconds": 5,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "resources": {
                                    "limits": {
                                        "cpu": "1",
                                        "memory": "2Gi"
                                    },
                                    "requests": {
                                        "cpu": "500m",
                                        "memory": "2Gi"
                                    }
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File"
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "enableServiceLinks": true,
                        "imagePullSecrets": [
                            {
                                "name": "regcred"
                            }
                        ],
                        "nodeSelector": {
                            "jl-svc-node": "true"
                        },
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "shareProcessNamespace": false,
                        "terminationGracePeriodSeconds": 30
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2022-08-23T21:17:10Z",
                        "lastUpdateTime": "2022-08-30T13:31:11Z",
                        "message": "ReplicaSet \"probation-6b96cb5bc6\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    },
                    {
                        "lastTransitionTime": "2022-09-01T09:13:22Z",
                        "lastUpdateTime": "2022-09-01T09:13:22Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    }
                ],
                "observedGeneration": 6,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/revision": "1"
                },
                "creationTimestamp": "2022-08-23T21:14:11Z",
                "generation": 1,
                "name": "profile",
                "namespace": "default",
                "resourceVersion": "2269962",
                "uid": "12331851-75b6-411c-a6a2-c075411b833f"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "app": "profile"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "25%",
                        "maxUnavailable": "25%"
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "profile"
                        }
                    },
                    "spec": {
                        "automountServiceAccountToken": true,
                        "containers": [
                            {
                                "env": [
                                    {
                                        "name": "SWAGGER_REDIRECT_URL",
                                        "value": "/api/profile/swagger-ui/index.html?url=/api/profile/v3/api-docs/all"
                                    }
                                ],
                                "envFrom": [
                                    {
                                        "configMapRef": {
                                            "name": "common-service-config",
                                            "optional": false
                                        }
                                    },
                                    {
                                        "configMapRef": {
                                            "name": "empty-config",
                                            "optional": false
                                        }
                                    },
                                    {
                                        "configMapRef": {
                                            "name": "empty-config",
                                            "optional": false
                                        }
                                    },
                                    {
                                        "configMapRef": {
                                            "name": "empty-config",
                                            "optional": false
                                        }
                                    },
                                    {
                                        "configMapRef": {
                                            "name": "profile-service-embedded-config",
                                            "optional": false
                                        }
                                    }
                                ],
                                "image": "docker-dev.javatar.com/profile:0.0.20",
                                "imagePullPolicy": "Always",
                                "livenessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/actuator/health/liveness",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 120,
                                    "periodSeconds": 15,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "name": "profile",
                                "ports": [
                                    {
                                        "containerPort": 8080,
                                        "name": "service-port",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 5050,
                                        "name": "debug-port",
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/actuator/health/readiness",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 60,
                                    "periodSeconds": 5,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "resources": {
                                    "limits": {
                                        "cpu": "1",
                                        "memory": "2Gi"
                                    },
                                    "requests": {
                                        "cpu": "500m",
                                        "memory": "2Gi"
                                    }
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File"
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "enableServiceLinks": true,
                        "imagePullSecrets": [
                            {
                                "name": "regcred"
                            }
                        ],
                        "nodeSelector": {
                            "jl-svc-node": "true"
                        },
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "shareProcessNamespace": false,
                        "terminationGracePeriodSeconds": 30
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2022-08-23T21:14:11Z",
                        "lastUpdateTime": "2022-08-23T21:15:22Z",
                        "message": "ReplicaSet \"profile-5b4895d49c\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    },
                    {
                        "lastTransitionTime": "2022-08-26T10:52:00Z",
                        "lastUpdateTime": "2022-08-26T10:52:00Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    }
                ],
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/revision": "3",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{\"deployment.kubernetes.io/revision\":\"2\"},\"creationTimestamp\":\"2022-08-23T21:06:13Z\",\"generation\":2,\"name\":\"recruitment-database\",\"namespace\":\"default\",\"resourceVersion\":\"2951693\",\"uid\":\"0c454784-3270-4e2c-b90a-4c097d8138f1\"},\"spec\":{\"progressDeadlineSeconds\":600,\"replicas\":1,\"revisionHistoryLimit\":10,\"selector\":{\"matchLabels\":{\"app\":\"recruitment-database\"}},\"strategy\":{\"rollingUpdate\":{\"maxSurge\":\"25%\",\"maxUnavailable\":\"25%\"},\"type\":\"RollingUpdate\"},\"template\":{\"metadata\":{\"creationTimestamp\":null,\"labels\":{\"app\":\"recruitment-database\"}},\"spec\":{\"automountServiceAccountToken\":true,\"containers\":[{\"env\":[{\"name\":\"SWAGGER_REDIRECT_URL\",\"value\":\"/api/recruitment-database/swagger-ui/index.html?url=/api/recruitment-database/v3/api-docs/all\"}],\"envFrom\":[{\"configMapRef\":{\"name\":\"recruitment-db-db-config\",\"optional\":false}},{\"configMapRef\":{\"name\":\"common-service-config\",\"optional\":false}},{\"configMapRef\":{\"name\":\"empty-config\",\"optional\":false}},{\"configMapRef\":{\"name\":\"empty-config\",\"optional\":false}},{\"configMapRef\":{\"name\":\"recruitment-database-service-embedded-config\",\"optional\":false}}],\"image\":\"docker-dev.javatar.com/recruitment-database:0.0.112.77\",\"imagePullPolicy\":\"Always\",\"livenessProbe\":{\"failureThreshold\":3,\"httpGet\":{\"path\":\"/actuator/health/liveness\",\"port\":8080,\"scheme\":\"HTTP\"},\"initialDelaySeconds\":120,\"periodSeconds\":15,\"successThreshold\":1,\"timeoutSeconds\":1},\"name\":\"recruitment-database\",\"ports\":[{\"containerPort\":8080,\"name\":\"service-port\",\"protocol\":\"TCP\"},{\"containerPort\":5050,\"name\":\"debug-port\",\"protocol\":\"TCP\"}],\"readinessProbe\":{\"failureThreshold\":3,\"httpGet\":{\"path\":\"/actuator/health/readiness\",\"port\":8080,\"scheme\":\"HTTP\"},\"initialDelaySeconds\":60,\"periodSeconds\":5,\"successThreshold\":1,\"timeoutSeconds\":1},\"resources\":{\"limits\":{\"cpu\":\"1\",\"memory\":\"2Gi\"},\"requests\":{\"cpu\":\"500m\",\"memory\":\"2Gi\"}},\"terminationMessagePath\":\"/dev/termination-log\",\"terminationMessagePolicy\":\"File\"}],\"dnsPolicy\":\"ClusterFirst\",\"enableServiceLinks\":true,\"imagePullSecrets\":[{\"name\":\"regcred\"}],\"nodeSelector\":{\"jl-svc-node\":\"true\"},\"restartPolicy\":\"Always\",\"schedulerName\":\"default-scheduler\",\"securityContext\":{},\"shareProcessNamespace\":false,\"terminationGracePeriodSeconds\":30}}},\"status\":{\"availableReplicas\":1,\"conditions\":[{\"lastTransitionTime\":\"2022-08-23T21:06:13Z\",\"lastUpdateTime\":\"2022-08-29T09:35:38Z\",\"message\":\"ReplicaSet \\\"recruitment-database-584c8f97b\\\" has successfully progressed.\",\"reason\":\"NewReplicaSetAvailable\",\"status\":\"True\",\"type\":\"Progressing\"},{\"lastTransitionTime\":\"2022-08-30T13:11:23Z\",\"lastUpdateTime\":\"2022-08-30T13:11:23Z\",\"message\":\"Deployment has minimum availability.\",\"reason\":\"MinimumReplicasAvailable\",\"status\":\"True\",\"type\":\"Available\"}],\"observedGeneration\":2,\"readyReplicas\":1,\"replicas\":1,\"updatedReplicas\":1}}\n"
                },
                "creationTimestamp": "2022-08-23T21:06:13Z",
                "generation": 3,
                "name": "recruitment-database",
                "namespace": "default",
                "resourceVersion": "4411986",
                "uid": "0c454784-3270-4e2c-b90a-4c097d8138f1"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "app": "recruitment-database"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "25%",
                        "maxUnavailable": "25%"
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "recruitment-database"
                        }
                    },
                    "spec": {
                        "automountServiceAccountToken": true,
                        "containers": [
                            {
                                "env": [
                                    {
                                        "name": "SWAGGER_REDIRECT_URL",
                                        "value": "/api/recruitment-database/swagger-ui/index.html?url=/api/recruitment-database/v3/api-docs/all"
                                    }
                                ],
                                "envFrom": [
                                    {
                                        "configMapRef": {
                                            "name": "recruitment-db-db-config",
                                            "optional": false
                                        }
                                    },
                                    {
                                        "configMapRef": {
                                            "name": "common-service-config",
                                            "optional": false
                                        }
                                    },
                                    {
                                        "configMapRef": {
                                            "name": "empty-config",
                                            "optional": false
                                        }
                                    },
                                    {
                                        "configMapRef": {
                                            "name": "empty-config",
                                            "optional": false
                                        }
                                    },
                                    {
                                        "configMapRef": {
                                            "name": "recruitment-database-service-embedded-config",
                                            "optional": false
                                        }
                                    }
                                ],
                                "image": "docker-dev.javatar.com/recruitment-database:0.0.112.77",
                                "imagePullPolicy": "Always",
                                "livenessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/actuator/health/liveness",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 120,
                                    "periodSeconds": 15,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "name": "recruitment-database",
                                "ports": [
                                    {
                                        "containerPort": 8080,
                                        "name": "service-port",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 5050,
                                        "name": "debug-port",
                                        "protocol": "TCP"
                                    }
                                ],
                                "readinessProbe": {
                                    "failureThreshold": 3,
                                    "httpGet": {
                                        "path": "/actuator/health/readiness",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 60,
                                    "periodSeconds": 5,
                                    "successThreshold": 1,
                                    "timeoutSeconds": 1
                                },
                                "resources": {
                                    "limits": {
                                        "cpu": "1",
                                        "memory": "2Gi"
                                    },
                                    "requests": {
                                        "cpu": "500m",
                                        "memory": "2Gi"
                                    }
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File"
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "enableServiceLinks": true,
                        "imagePullSecrets": [
                            {
                                "name": "regcred"
                            }
                        ],
                        "nodeSelector": {
                            "jl-svc-node": "true"
                        },
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "shareProcessNamespace": false,
                        "terminationGracePeriodSeconds": 30
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2022-08-30T13:11:23Z",
                        "lastUpdateTime": "2022-08-30T13:11:23Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "lastTransitionTime": "2022-08-23T21:06:13Z",
                        "lastUpdateTime": "2022-09-08T07:40:13Z",
                        "message": "ReplicaSet \"recruitment-database-857bd454d\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observedGeneration": 3,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/revision": "1"
                },
                "creationTimestamp": "2022-08-13T13:59:05Z",
                "generation": 1,
                "name": "redis",
                "namespace": "default",
                "resourceVersion": "1838067",
                "uid": "cf5a2087-0d55-43b9-a97a-6d35a6485f2d"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "app": "redis"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "25%",
                        "maxUnavailable": "25%"
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "redis"
                        }
                    },
                    "spec": {
                        "automountServiceAccountToken": true,
                        "containers": [
                            {
                                "image": "redis:7.0",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "redis",
                                "ports": [
                                    {
                                        "containerPort": 6379,
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "cpu": "1",
                                        "memory": "2Gi"
                                    },
                                    "requests": {
                                        "cpu": "500m",
                                        "memory": "2Gi"
                                    }
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File"
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "enableServiceLinks": true,
                        "nodeSelector": {
                            "jl-db-node": "true"
                        },
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "shareProcessNamespace": false,
                        "terminationGracePeriodSeconds": 30
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2022-08-13T13:59:05Z",
                        "lastUpdateTime": "2022-08-13T13:59:10Z",
                        "message": "ReplicaSet \"redis-765bdd68d6\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    },
                    {
                        "lastTransitionTime": "2022-08-23T20:48:29Z",
                        "lastUpdateTime": "2022-08-23T20:48:29Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    }
                ],
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/revision": "1"
                },
                "creationTimestamp": "2022-08-12T20:13:52Z",
                "generation": 1,
                "name": "zoo-0",
                "namespace": "default",
                "resourceVersion": "2269950",
                "uid": "8c4cc138-6d75-40ed-ad22-e02802d4e2bd"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "app": "zoo-0"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "25%",
                        "maxUnavailable": "25%"
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "zoo-0"
                        }
                    },
                    "spec": {
                        "automountServiceAccountToken": true,
                        "containers": [
                            {
                                "env": [
                                    {
                                        "name": "ZOO_MY_ID",
                                        "value": "1"
                                    },
                                    {
                                        "name": "ZOOKEEPER_SERVER_ID",
                                        "value": "1"
                                    },
                                    {
                                        "name": "ZOO_SERVERS",
                                        "value": "server.1=0.0.0.0:2888:3888 server.2=zoo-1:2888:3888 server.3=zoo-2:2888:3888"
                                    },
                                    {
                                        "name": "ZOOKEEPER_SERVERS",
                                        "value": "0.0.0.0:2888:3888;zoo-1:2888:3888;zoo-2:2888:3888"
                                    },
                                    {
                                        "name": "ZOOKEEPER_CLIENT_PORT",
                                        "value": "2181"
                                    },
                                    {
                                        "name": "ZOOKEEPER_SERVER_ID",
                                        "value": "1"
                                    },
                                    {
                                        "name": "ZOOKEEPER_TICK_TIME",
                                        "value": "2000"
                                    },
                                    {
                                        "name": "ZOOKEEPER_INIT_LIMIT",
                                        "value": "5"
                                    },
                                    {
                                        "name": "ZOOKEEPER_SYNC_LIMIT",
                                        "value": "2"
                                    }
                                ],
                                "image": "confluentinc/cp-zookeeper:7.2.1.amd64",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "zoo-0",
                                "ports": [
                                    {
                                        "containerPort": 2181,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 2888,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 3888,
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "cpu": "450m",
                                        "memory": "1Gi"
                                    },
                                    "requests": {
                                        "cpu": "250m",
                                        "memory": "1Gi"
                                    }
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/data",
                                        "mountPropagation": "None",
                                        "name": "zoo-zoo-data-volume-mount-0"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "enableServiceLinks": true,
                        "nodeSelector": {
                            "zoo-node-with-volume-0": "true"
                        },
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "shareProcessNamespace": false,
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "name": "zoo-zoo-data-volume-mount-0",
                                "persistentVolumeClaim": {
                                    "claimName": "zoo-pvc-0"
                                }
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2022-08-12T20:13:52Z",
                        "lastUpdateTime": "2022-08-12T20:14:08Z",
                        "message": "ReplicaSet \"zoo-0-857dcc8c4b\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    },
                    {
                        "lastTransitionTime": "2022-08-26T10:51:59Z",
                        "lastUpdateTime": "2022-08-26T10:51:59Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    }
                ],
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/revision": "1"
                },
                "creationTimestamp": "2022-08-12T20:13:52Z",
                "generation": 1,
                "name": "zoo-1",
                "namespace": "default",
                "resourceVersion": "1837296",
                "uid": "8475e54d-3155-4ce0-a310-451e81776dea"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "app": "zoo-1"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "25%",
                        "maxUnavailable": "25%"
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "zoo-1"
                        }
                    },
                    "spec": {
                        "automountServiceAccountToken": true,
                        "containers": [
                            {
                                "env": [
                                    {
                                        "name": "ZOO_MY_ID",
                                        "value": "2"
                                    },
                                    {
                                        "name": "ZOOKEEPER_SERVER_ID",
                                        "value": "2"
                                    },
                                    {
                                        "name": "ZOO_SERVERS",
                                        "value": "server.1=zoo-0:2888:3888 server.2=0.0.0.0:2888:3888 server.3=zoo-2:2888:3888"
                                    },
                                    {
                                        "name": "ZOOKEEPER_SERVERS",
                                        "value": "zoo-0:2888:3888;0.0.0.0:2888:3888;zoo-2:2888:3888"
                                    },
                                    {
                                        "name": "ZOOKEEPER_CLIENT_PORT",
                                        "value": "2181"
                                    },
                                    {
                                        "name": "ZOOKEEPER_SERVER_ID",
                                        "value": "2"
                                    },
                                    {
                                        "name": "ZOOKEEPER_TICK_TIME",
                                        "value": "2000"
                                    },
                                    {
                                        "name": "ZOOKEEPER_INIT_LIMIT",
                                        "value": "5"
                                    },
                                    {
                                        "name": "ZOOKEEPER_SYNC_LIMIT",
                                        "value": "2"
                                    }
                                ],
                                "image": "confluentinc/cp-zookeeper:7.2.1.amd64",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "zoo-1",
                                "ports": [
                                    {
                                        "containerPort": 2181,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 2888,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 3888,
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "cpu": "450m",
                                        "memory": "1Gi"
                                    },
                                    "requests": {
                                        "cpu": "250m",
                                        "memory": "1Gi"
                                    }
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/data",
                                        "mountPropagation": "None",
                                        "name": "zoo-zoo-data-volume-mount-1"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "enableServiceLinks": true,
                        "nodeSelector": {
                            "zoo-node-with-volume-1": "true"
                        },
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "shareProcessNamespace": false,
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "name": "zoo-zoo-data-volume-mount-1",
                                "persistentVolumeClaim": {
                                    "claimName": "zoo-pvc-1"
                                }
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2022-08-12T20:13:52Z",
                        "lastUpdateTime": "2022-08-12T20:14:05Z",
                        "message": "ReplicaSet \"zoo-1-6746dc6cc\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    },
                    {
                        "lastTransitionTime": "2022-08-23T20:45:52Z",
                        "lastUpdateTime": "2022-08-23T20:45:52Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    }
                ],
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        },
        {
            "apiVersion": "apps/v1",
            "kind": "Deployment",
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/revision": "1"
                },
                "creationTimestamp": "2022-08-12T20:13:52Z",
                "generation": 1,
                "name": "zoo-2",
                "namespace": "default",
                "resourceVersion": "1837678",
                "uid": "ef9624fb-1427-49df-9e76-2e5bc02fd300"
            },
            "spec": {
                "progressDeadlineSeconds": 600,
                "replicas": 1,
                "revisionHistoryLimit": 10,
                "selector": {
                    "matchLabels": {
                        "app": "zoo-2"
                    }
                },
                "strategy": {
                    "rollingUpdate": {
                        "maxSurge": "25%",
                        "maxUnavailable": "25%"
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "zoo-2"
                        }
                    },
                    "spec": {
                        "automountServiceAccountToken": true,
                        "containers": [
                            {
                                "env": [
                                    {
                                        "name": "ZOO_MY_ID",
                                        "value": "3"
                                    },
                                    {
                                        "name": "ZOOKEEPER_SERVER_ID",
                                        "value": "3"
                                    },
                                    {
                                        "name": "ZOO_SERVERS",
                                        "value": "server.1=zoo-0:2888:3888 server.2=zoo-1:2888:3888 server.3=0.0.0.0:2888:3888"
                                    },
                                    {
                                        "name": "ZOOKEEPER_SERVERS",
                                        "value": "zoo-0:2888:3888;zoo-1:2888:3888;0.0.0.0:2888:3888"
                                    },
                                    {
                                        "name": "ZOOKEEPER_CLIENT_PORT",
                                        "value": "2181"
                                    },
                                    {
                                        "name": "ZOOKEEPER_SERVER_ID",
                                        "value": "3"
                                    },
                                    {
                                        "name": "ZOOKEEPER_TICK_TIME",
                                        "value": "2000"
                                    },
                                    {
                                        "name": "ZOOKEEPER_INIT_LIMIT",
                                        "value": "5"
                                    },
                                    {
                                        "name": "ZOOKEEPER_SYNC_LIMIT",
                                        "value": "2"
                                    }
                                ],
                                "image": "confluentinc/cp-zookeeper:7.2.1.amd64",
                                "imagePullPolicy": "IfNotPresent",
                                "name": "zoo-2",
                                "ports": [
                                    {
                                        "containerPort": 2181,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 2888,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 3888,
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "cpu": "450m",
                                        "memory": "1Gi"
                                    },
                                    "requests": {
                                        "cpu": "250m",
                                        "memory": "1Gi"
                                    }
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "volumeMounts": [
                                    {
                                        "mountPath": "/data",
                                        "mountPropagation": "None",
                                        "name": "zoo-zoo-data-volume-mount-2"
                                    }
                                ]
                            }
                        ],
                        "dnsPolicy": "ClusterFirst",
                        "enableServiceLinks": true,
                        "nodeSelector": {
                            "zoo-node-with-volume-2": "true"
                        },
                        "restartPolicy": "Always",
                        "schedulerName": "default-scheduler",
                        "securityContext": {},
                        "shareProcessNamespace": false,
                        "terminationGracePeriodSeconds": 30,
                        "volumes": [
                            {
                                "name": "zoo-zoo-data-volume-mount-2",
                                "persistentVolumeClaim": {
                                    "claimName": "zoo-pvc-2"
                                }
                            }
                        ]
                    }
                }
            },
            "status": {
                "availableReplicas": 1,
                "conditions": [
                    {
                        "lastTransitionTime": "2022-08-12T20:13:52Z",
                        "lastUpdateTime": "2022-08-12T20:14:26Z",
                        "message": "ReplicaSet \"zoo-2-54d46dbfbd\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    },
                    {
                        "lastTransitionTime": "2022-08-23T20:47:25Z",
                        "lastUpdateTime": "2022-08-23T20:47:25Z",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    }
                ],
                "observedGeneration": 1,
                "readyReplicas": 1,
                "replicas": 1,
                "updatedReplicas": 1
            }
        }
    ],
    "kind": "List",
    "metadata": {
        "resourceVersion": "",
        "selfLink": ""
    }
}
